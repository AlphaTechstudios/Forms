{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","getOwnDefinition","NG_PROV_DEF","NG_INJECTABLE_DEF","def","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","NG_PROV_DEF_FALLBACK","ɵprovFallback","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","concatStringsWithSpace","before","after","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","R3FactoryTarget","ViewEncapsulation","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","ɵɵinvalidFactoryDep","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","assertDefined","actual","msg","throwError","expected","comparison","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","keyValueArraySet","keyValueArray","keyValueArrayIndexOf","arrayInsert2","array","value1","value2","end","keyValueArrayGet","_arrayIndexOfSorted","shift","start","middle","current","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","hostVars","hostAttrs","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","autoRegisterModuleById","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_COMPONENT_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","SVG_NAMESPACE","MATH_ML_NAMESPACE","instructionState","lFrame","createLFrame","bindingsEnabled","checkNoChangesMode","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","getTView","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","setBindingIndex","nextBindingIndex","incrementBindingIndex","count","setBindingRootForHostBindings","currentDirectiveIndex","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","enterView","currentLFrame","childLFrame","child","parent","selectedIndex","elementDepthCount","currentNamespace","currentSanitizer","leaveViewLight","oldLFrame","leaveDI","leaveView","nextContextImpl","level","walkUpViews","nestingLevel","currentView","getSelectedIndex","setSelectedIndex","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","registerPostOrderHooks","directiveStart","directiveEnd","directiveDef","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","nodeIndex","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","DOCUMENT","getDocument","document","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","mergeHostAttrs","src","srcMarker","mergeHostAttribute","key1","key2","markerInsertPosition","dstValue","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","hostView","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","view","hostTNode","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","registerPreOrderHooks","directiveIndex","preOrderHooks","preOrderCheckHooks","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","inertBody","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","prop","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","stylePropNeedsSanitization","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentLViewByIndex","slotValue","readPatchedData","readPatchedLView","isCreationMode","viewAttachedToChangeDetector","getConstant","resetPreOrderHookFlags","getLContainerActiveIndex","lContainer","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","classIndexOf","className","classToSearch","startingIndex","foundIndex","length_1","NG_TEMPLATE_SELECTOR","isCssClassMatching","cssClassToMatch","isProjectionMode","hasTagAndTypeMatch","currentSelector","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","maybeWrapInNotSelector","isNegativeMode","chunk","stringifyCSSSelector","result","currentChunk","valueOrMarker","attrValue","NO_CHANGE","getLViewParent","getRootContext","viewOrComponent","getRootView","componentOrLView","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","toTStylingRange","prev","getTStylingRangePrev","tStylingRange","getTStylingRangePrevDuplicate","setTStylingRangePrevDuplicate","getTStylingRangeNext","setTStylingRangeNext","getTStylingRangeNextDuplicate","setTStylingRangeNextDuplicate","toDebugStyleBinding","isClassBased","tView_","bindings","range","classBindings","styleBindings","isTemplate","cursor","itemRange","prevDuplicate","nextDuplicate","nextIndex","prevIndex","residualClasses","residualStyles","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","expandoStartIndex","expandoInstructions","firstUpdatePass","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","enumerable","configurable","TNode","directiveStylingLast","propertyBindings","mergedAttrs","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","elementIndex","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","activeIndexFlag","embeddedLView","embeddedTView","refreshTransplantedViews","setHostBindingsByExecutingExpandoInstructions","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","isComponent","addComponentLogic","setInputsFromAttrs","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","viewData","localRefExtractor","localIndex","getOrCreateTComponentView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","selectRootElement","ShadowDom","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","hasDirectives","findDirectiveDefMatches","registry","matches","markAsComponentHost","exportsMap","","totalDirectiveHostVars","initTNodeFlags","generateExpandoInstructionBlock","preOrderHooksFound","preOrderCheckHooksFound","baseResolveDirective","saveNameToExportMap","addHostBindingsToExpandoInstructions","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","growHostVarsSpace","cacheMatchingLocalNames","directiveCount","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","initialInputData","privateName","inputsToStore","createLContainer","hostNative","declaredComponentLView","movedViews","movedLView","insertedComponentLView","movedTView","componentHostIdx","componentTView","syncViewWithBlueprint","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getLCleanup","getTViewCleanup","loadComponentRenderer","unwrapLView","errorHandler","textBindingInternal","setValue","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","lQueries","detachMovedView","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","firstTNodeOfView","getFirstNativeNode","tNodeType","elIcuContainerChild","rNodeOrLContainer","componentHost","firstProjectedTNode","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","writeDirectStyle","newValue","style","cssText","writeDirectClass","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","firstProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef","createTemplateRef","TemplateRefToken","TemplateRef","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","clear","remove","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","viewAttachedToContainer","prevIdx","prevLContainer","prevVCRef","adjustedIdx","_adjustIndex","move","newIndex","viewRefsArr","setLContainerActiveIndex","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","Invalid","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","processProvider","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","add","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","isValueProvider","providerToFactory","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","typeName","unwrappedProvider","isFactoryProvider","isExistingProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","multiProvider","multiProviderMixError","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","computeDeps","providerDeps","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","computeStaticStyling","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","is","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","comment","ɵɵtemplate","attrsIndex","localRefsIndex","templateFirstCreatePass","tViewConsts","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵinvalidFactory","ɵɵproperty","setDirectiveInputsWhichShadowsStyling","property","ɵɵelementStart","getNamespace","elementStartFirstCreatePass","elementStart","getElementDepthCount","increaseElementDepthCount","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","hasClassInput","hasStyleInput","ɵɵelement","ɵɵelementContainerStart","elementContainerStartFirstCreatePass","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","EMPTY_ARRAY$3","markDuplicates","tStylingKey","isPrevDir","isClassBinding","tStylingAtIndex","isMap","foundDuplicate","tStyleRangeAtCursor","isStylingMatch","tStylingKeyCursor","parserState","textEnd","keyEnd","valueEnd","getLastParsedKey","getLastParsedValue","parseClassNameNext","consumeClassToken","startIndex","consumeWhitespace","parseStyleNext","consumeStyleKey","ch","consumeSeparator","consumeStyleValue","ch1","ch2","ch3","lastChIndex","consumeQuotedText","resetParserState","separator","quoteCharCode","ɵɵstyleSanitizer","setCurrentStyleSanitizer","ɵɵstyleProp","checkStylingProperty","ɵɵclassProp","ɵɵstyleMap","checkStylingMap","styleKeyValueArraySet","styleStringParser","parseStyle","ɵɵclassMap","classStringParser","parseClassName","suffixOrSanitizer","stylingFirstUpdatePass","styleSanitizer","getCurrentStyleSanitizer","updateStyling","normalizeAndApplySuffixOrSanitizer","stringParser","hasStylingInputShadow","isInHostBindings","staticPrefix","updateStylingMap","oldKeyValueArray","newKeyValueArray","oldIndex","oldKey","setKey","toStylingKeyValueArray","styleKeyValueArray","unwrappedValue","isHostBindings","wrapInStaticStylingKey","stylingKey","hostDirectiveDef","getHostDirectiveDef","getCurrentDirectiveIndex","residual","collectStylingFromTAttrs","collectStylingFromDirectives","templateStylingKey","getTemplateHeadTStylingKey","setTemplateHeadTStylingKey","collectResidual","insertTStylingBinding","tStylingKeyWithStatic","isHostBinding","tBindings","tmplHead","tmplTail","isKeyDuplicateOfStatic","previousNode","setTStylingRangePrev","markDuplicateOfResidualStyling","currentDirective","desiredMarker","currentMarker","tRange","isStylingValuePresent","findStylingValue","applyStyling","isProcedural","addClass","classList","removeClass","removeStyle","removeProperty","setStyle","isPrevDirection","rawKey","containsStatics","isStylingMap","valueAtLViewIndex","currentValue","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstyleMapInterpolate1","ɵɵstyleMapInterpolate2","ɵɵstyleMapInterpolate3","ɵɵstyleMapInterpolate4","ɵɵstyleMapInterpolate5","ɵɵstyleMapInterpolate6","ɵɵstyleMapInterpolate7","ɵɵstyleMapInterpolate8","ɵɵstyleMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","assertDomElement","loadLContext","getComponentAtNodeIndex","getContext","getOwningComponent","elementOrDir","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","componentOrDirective","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","Element","applyChanges","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","hostRenderer","viewRenderer","createRootComponent","componentDef","rootLView","hostFeatures","instantiateRootComponent","rootTNode","rootTView","createRootContext","LifecycleHooksFeature","dirIndex","getSuperType","ɵɵInheritDefinitionFeature","definition","superType","shouldInheritFields","inheritanceChain","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","animation","defData","ngInherit","mergeHostAttrsAcrossInheritance","prevViewQuery","ctx","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","COPY_DIRECTIVE_FIELDS_1","COPY_DIRECTIVE_FIELDS_1_1","field","COPY_COMPONENT_FIELDS_1","COPY_COMPONENT_FIELDS_1_1","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","existingFactoryIndex","registerDestroyHooksIfSupported","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","contextIndex","isClassProvider","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","TemplateRef_","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","listener","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","stringifyCSSSelectorList","selectorList","isBoundToModule","tElementNode","rootViewInjector","createChainedInjector","elementName","hostRNode","getNamespace$1","rootFlags","isIsolated","extractAttrsAndClassesFromSelector","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","u","localeEn","plural","Math","floor","abs","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","getLocalePluralCase","ɵLocaleDataIndex","PluralCase","common","locales","DEFAULT_LOCALE_ID","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","previousTNodeIndex","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","isElement","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","bindingsStartIndex","readUpdateOpCodes","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","NgModuleRef$1","componentFactoryResolver","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","pureFunction1Internal","ɵɵpureFunction2","pureFunction2Internal","ɵɵpureFunction3","pureFunction3Internal","ɵɵpureFunction4","pureFunction4Internal","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","pureFunctionVInternal","bindingRoot","ɵɵpipe","pipeName","getPipeDef$1","pipeFactory","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","declarationNodeIdx","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","i_1","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$5","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addDirectiveDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","ngFactoryDef","compileFactory","injectFn","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","splitByComma","viewQueries","objPrototype","shouldAddAbstractDirective","isQueryAnn","queriesMeta","annotations_1","ann","isInputAnnotation","convertToR3QueryMetadata","propertyName","static","piece","LIFECYCLE_HOOKS","hookName","metadataName","compilePipe","ngPipeDef","getPipeMetadata","Pipe","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","SWITCH_COMPILE_PIPE","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","LOCALE_ID$1","DEFAULT_CURRENCY_CODE","TRANSLATIONS","TRANSLATIONS_FORMAT","ivyEnabled","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","getNativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","forkInnerZoneWithAngularBehavior","zone","maybeDelayChangeDetection","delayChangeDetectionForEvents","updateMicroTaskStatus","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__PRE_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneEventCoalescing","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","copyDomProperties","NodePrototype","descriptors","getOwnPropertyDescriptors","startsWith","isPrimitiveValue","collectPropertyBindings","bindingIndexes","metadataParts","lowercaseTNodeAttrs","eAttrs","lowercaseName","baseVal","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","_queryNativeNodeDescendants","rootNativeNode","_addQueryMatchR3","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","debugNode","getDebugNode$1","_nativeNodeToDebugNode","getDebugNode__PRE_R3__","NG_DEBUG_PROPERTY","getDebugNodeR2__PRE_R3__","getDebugNodeR2","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","getGlobalLocale","$localize","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","asNativeElements","debugEls","destroyPlatform","enableProdMode","getDebugNode","setTestabilityGetter","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵCodegenComponentFactoryResolver","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵComponentFactory","ɵConsole","ɵDEFAULT_LOCALE_ID","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵINJECTOR_SCOPE","ɵLifecycleHooksFeature","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_ELEMENT_ID","ɵNG_INJ_DEF","ɵNG_MOD_DEF","ɵNG_PIPE_DEF","ɵNG_PROV_DEF","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵNO_CHANGE","ɵNgModuleFactory","ɵNoopNgZone","ɵReflectionCapabilities","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵallowSanitizationBypassAndThrow","ɵand","templateFactory","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bm","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_bq","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_k","ɵangular_packages_core_core_l","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_r","ɵangular_packages_core_core_s","ɵangular_packages_core_core_t","ɵangular_packages_core_core_u","ɵangular_packages_core_core_v","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_y","ɵangular_packages_core_core_z","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵccf","createComponentFactory","ɵclearOverrides","ɵclearResolutionOfComponentResourcesQueue","ɵcmf","createNgModuleFactory","defFactory","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","part","resourceLoader","ResourceLoader","ɵcompilePipe","ɵcreateInjector","ɵcrt","createRendererType2","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdetectChanges","ɵdevModeEqual","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵfindLocaleData","ɵflushModuleScopingQueueAsMuchAsPossible","ɵgetComponentViewDefinitionFactory","ɵgetDebugNodeR2","ɵgetDebugNode__POST_R3__","ɵgetDirectives","ɵgetHostElement","ɵgetInjectableDef","ɵgetLContext","ɵgetLocaleCurrencyCode","getLocaleCurrencyCode","CurrencyCode","ɵgetLocalePluralCase","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵgetSanitizationBypassType","ɵglobal","ɵinitServicesIfNeeded","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵisListLikeIterable","ɵisObservable","ɵisPromise","ɵivyEnabled","ɵlooseIdentical","ɵmakeDecorator","ɵmarkDirty","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵoverrideComponentView","ɵoverrideProvider","ɵpad","pureArrayDef","argCount","ɵpatchComponentDefWithScope","ɵpid","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵprd","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵpublishGlobalUtil","ɵqud","ɵregisterLocaleData","registerLocaleData","extraData","LocaleId","ExtraData","ɵregisterModuleFactory","registerModuleFactory","ɵregisterNgModuleType","ɵrenderComponent","renderComponent$1","componentTag","ɵresetCompiledComponents","resetCompiledComponents","ɵresolveComponentResources","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵsetCurrentInjector","ɵsetDocument","setDocument","ɵsetLocaleId","ɵstore","ɵstringify","ɵted","textDef","staticText","ɵtransitiveScopesFor","ɵunregisterLocaleData","unregisterAllLocaleData","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵunwrapSafeValue","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags","ɵwhenRendered","whenRendered"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, (function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        return getOwnDefinition(type, type[NG_PROV_DEF]) ||\n            getOwnDefinition(type, type[NG_INJECTABLE_DEF]);\n    }\n    /**\n     * Return `def` only if it is defined directly on `type` and is not inherited from a base\n     * class of `type`.\n     *\n     * The function `Object.hasOwnProperty` is not sufficient to distinguish this case because in older\n     * browsers (e.g. IE10) static property inheritance is implemented by copying the properties.\n     *\n     * Instead, the definition's `token` is compared to the `type`, and if they don't match then the\n     * property was not defined directly on the type itself, and was likely inherited. The definition\n     * is only returned if the `type` matches the `def.token`.\n     */\n    function getOwnDefinition(type, def) {\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        // See `jit/injectable.ts#compileInjectable` for context on NG_PROV_DEF_FALLBACK.\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF] ||\n            (type[NG_PROV_DEF_FALLBACK] && type[NG_PROV_DEF_FALLBACK]()));\n        if (def) {\n            var typeName = getTypeName(type);\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + typeName + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + typeName + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /** Gets the name of a type, accounting for some cross-browser differences. */\n    function getTypeName(type) {\n        // `Function.prototype.name` behaves differently between IE and other browsers. In most browsers\n        // it'll always return the name of the function itself, no matter how many other functions it\n        // inherits from. On IE the function doesn't have its own `name` property, but it takes it from\n        // the lowest level in the prototype chain. E.g. if we have `class Foo extends Parent` most\n        // browsers will evaluate `Foo.name` to `Foo` while IE will return `Parent`. We work around\n        // the issue by converting the function to a string and parsing its name out that way via a regex.\n        if (type.hasOwnProperty('name')) {\n            return type.name;\n        }\n        var match = ('' + type).match(/^function\\s*([^\\s(]+)/);\n        return match === null ? '' : match[1];\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n    // which will break inheriting the injectable definition from a grandparent through an\n    // undecorated parent class. We work around it by defining a fallback method which will be\n    // used to retrieve the definition. This should only be a problem in JIT mode, because in\n    // AOT TypeScript seems to have a workaround for static properties. When inheriting from an\n    // undecorated parent is no longer supported in v10, this can safely be removed.\n    var NG_PROV_DEF_FALLBACK = getClosureSafeProperty({ ɵprovFallback: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Concatenates two strings with separator, allocating new strings only when necessary.\n     *\n     * @param before before string.\n     * @param separator separator string.\n     * @param after after string.\n     * @returns concatenated string.\n     */\n    function concatStringsWithSpace(before, after) {\n        return (before == null || before === '') ?\n            (after === null ? '' : after) :\n            ((after == null || after === '') ? before : before + ' ' + after);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Invalid\"] = 3] = \"Invalid\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n    var R3FactoryTarget;\n    (function (R3FactoryTarget) {\n        R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n        R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n        R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n        R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n        R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n    })(R3FactoryTarget || (R3FactoryTarget = {}));\n    var ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(ViewEncapsulation || (ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstCreatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = {};\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactoryDep(index) {\n        var msg = ngDevMode ?\n            \"This constructor is not compatible with Angular Dependency Injection because its dependency at index \" + index + \" of the parameter list is invalid.\\nThis can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\\n\\nPlease check that 1) the type for the parameter at index \" + index + \" is correct and 2) the correct Angular decorators are defined for this class and its ancestors.\" :\n            'invalid';\n        throw new Error(msg);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (!(typeof actual === 'number')) {\n            throwError(msg, typeof actual, 'number', '===');\n        }\n    }\n    function assertNumberInRange(actual, minInclusive, maxInclusive) {\n        assertNumber(actual, 'Expected a number');\n        assertLessThanOrEqual(actual, maxInclusive, 'Expected number to be less than or equal to');\n        assertGreaterThanOrEqual(actual, minInclusive, 'Expected number to be greater than or equal to');\n    }\n    function assertString(actual, msg) {\n        if (!(typeof actual === 'string')) {\n            throwError(msg, actual === null ? 'null' : typeof actual, 'string', '===');\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (!(actual == expected)) {\n            throwError(msg, actual, expected, '==');\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (!(actual != expected)) {\n            throwError(msg, actual, expected, '!=');\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (!(actual === expected)) {\n            throwError(msg, actual, expected, '===');\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (!(actual !== expected)) {\n            throwError(msg, actual, expected, '!==');\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (!(actual < expected)) {\n            throwError(msg, actual, expected, '<');\n        }\n    }\n    function assertLessThanOrEqual(actual, expected, msg) {\n        if (!(actual <= expected)) {\n            throwError(msg, actual, expected, '<=');\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (!(actual > expected)) {\n            throwError(msg, actual, expected, '>');\n        }\n    }\n    function assertGreaterThanOrEqual(actual, expected, msg) {\n        if (!(actual >= expected)) {\n            throwError(msg, actual, expected, '>=');\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg, actual, null, '==');\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg, actual, null, '!=');\n        }\n    }\n    function throwError(msg, actual, expected, comparison) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg +\n            (comparison == null ? '' : \" [Expected=> \" + expected + \" \" + comparison + \" \" + actual + \" <=Actual]\"));\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n    /**\n     * Remove item from array (Same as `Array.splice()` but faster.)\n     *\n     * `Array.splice()` is not as fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * https://jsperf.com/fast-array-splice (About 20x faster)\n     *\n     * @param array Array to splice\n     * @param index Index of element in array to remove.\n     * @param count Number of items to remove.\n     */\n    function arraySplice(array, index, count) {\n        var length = array.length - count;\n        while (index < length) {\n            array[index] = array[index + count];\n            index++;\n        }\n        while (count--) {\n            array.pop(); // shrink the array\n        }\n    }\n    /**\n     * Same as `Array.splice(index, 0, value)` but faster.\n     *\n     * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * @param array Array to splice.\n     * @param index Index in array where the `value` should be added.\n     * @param value Value to add to array.\n     */\n    function arrayInsert(array, index, value) {\n        ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n        var end = array.length;\n        while (end > index) {\n            var previousEnd = end - 1;\n            array[end] = array[previousEnd];\n            end = previousEnd;\n        }\n        array[index] = value;\n    }\n    /**\n     * Same as `Array.splice2(index, 0, value1, value2)` but faster.\n     *\n     * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * @param array Array to splice.\n     * @param index Index in array where the `value` should be added.\n     * @param value1 Value to add to array.\n     * @param value2 Value to add to array.\n     */\n    function arrayInsert2(array, index, value1, value2) {\n        ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n        var end = array.length;\n        if (end == index) {\n            // inserting at the end.\n            array.push(value1, value2);\n        }\n        else if (end === 1) {\n            // corner case when we have less items in array than we have items to insert.\n            array.push(value2, array[0]);\n            array[0] = value1;\n        }\n        else {\n            end--;\n            array.push(array[end - 1], array[end]);\n            while (end > index) {\n                var previousEnd = end - 2;\n                array[end] = array[previousEnd];\n                end--;\n            }\n            array[index] = value1;\n            array[index + 1] = value2;\n        }\n    }\n    /**\n     * Insert a `value` into an `array` so that the array remains sorted.\n     *\n     * NOTE:\n     * - Duplicates are not allowed, and are ignored.\n     * - This uses binary search algorithm for fast inserts.\n     *\n     * @param array A sorted array to insert into.\n     * @param value The value to insert.\n     * @returns index of the inserted value.\n     */\n    function arrayInsertSorted(array, value) {\n        var index = arrayIndexOfSorted(array, value);\n        if (index < 0) {\n            // if we did not find it insert it.\n            index = ~index;\n            arrayInsert(array, index, value);\n        }\n        return index;\n    }\n    /**\n     * Remove `value` from a sorted `array`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to remove from.\n     * @param value The value to remove.\n     * @returns index of the removed value.\n     *   - positive index if value found and removed.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     *     inserted)\n     */\n    function arrayRemoveSorted(array, value) {\n        var index = arrayIndexOfSorted(array, value);\n        if (index >= 0) {\n            arraySplice(array, index, 1);\n        }\n        return index;\n    }\n    /**\n     * Get an index of an `value` in a sorted `array`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to binary search.\n     * @param value The value to look for.\n     * @returns index of the value.\n     *   - positive index if value found.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     *     located)\n     */\n    function arrayIndexOfSorted(array, value) {\n        return _arrayIndexOfSorted(array, value, 0);\n    }\n    /**\n     * Set a `value` for a `key`.\n     *\n     * @param keyValueArray to modify.\n     * @param key The key to locate or create.\n     * @param value The value to set for a `key`.\n     * @returns index (always even) of where the value vas set.\n     */\n    function keyValueArraySet(keyValueArray, key, value) {\n        var index = keyValueArrayIndexOf(keyValueArray, key);\n        if (index >= 0) {\n            // if we found it set it.\n            keyValueArray[index | 1] = value;\n        }\n        else {\n            index = ~index;\n            arrayInsert2(keyValueArray, index, key, value);\n        }\n        return index;\n    }\n    /**\n     * Retrieve a `value` for a `key` (on `undefined` if not found.)\n     *\n     * @param keyValueArray to search.\n     * @param key The key to locate.\n     * @return The `value` stored at the `key` location or `undefined if not found.\n     */\n    function keyValueArrayGet(keyValueArray, key) {\n        var index = keyValueArrayIndexOf(keyValueArray, key);\n        if (index >= 0) {\n            // if we found it retrieve it.\n            return keyValueArray[index | 1];\n        }\n        return undefined;\n    }\n    /**\n     * Retrieve a `key` index value in the array or `-1` if not found.\n     *\n     * @param keyValueArray to search.\n     * @param key The key to locate.\n     * @returns index of where the key is (or should have been.)\n     *   - positive (even) index if key found.\n     *   - negative index if key not found. (`~index` (even) to get the index where it should have\n     *     been inserted.)\n     */\n    function keyValueArrayIndexOf(keyValueArray, key) {\n        return _arrayIndexOfSorted(keyValueArray, key, 1);\n    }\n    /**\n     * Delete a `key` (and `value`) from the `KeyValueArray`.\n     *\n     * @param keyValueArray to modify.\n     * @param key The key to locate or delete (if exist).\n     * @returns index of where the key was (or should have been.)\n     *   - positive (even) index if key found and deleted.\n     *   - negative index if key not found. (`~index` (even) to get the index where it should have\n     *     been.)\n     */\n    function keyValueArrayDelete(keyValueArray, key) {\n        var index = keyValueArrayIndexOf(keyValueArray, key);\n        if (index >= 0) {\n            // if we found it remove it.\n            arraySplice(keyValueArray, index, 2);\n        }\n        return index;\n    }\n    /**\n     * INTERNAL: Get an index of an `value` in a sorted `array` by grouping search by `shift`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to binary search.\n     * @param value The value to look for.\n     * @param shift grouping shift.\n     *   - `0` means look at every location\n     *   - `1` means only look at every other (even) location (the odd locations are to be ignored as\n     *         they are values.)\n     * @returns index of the value.\n     *   - positive index if value found.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     * inserted)\n     */\n    function _arrayIndexOfSorted(array, value, shift) {\n        ngDevMode && assertEqual(Array.isArray(array), true, 'Expecting an array');\n        var start = 0;\n        var end = array.length >> shift;\n        while (end !== start) {\n            var middle = start + ((end - start) >> 1); // find the middle.\n            var current = array[middle << shift];\n            if (value === current) {\n                return (middle << shift);\n            }\n            else if (current > value) {\n                end = middle;\n            }\n            else {\n                start = middle + 1; // We already searched middle so make it non-inclusive by adding 1\n            }\n        }\n        return ~(end << shift);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            hostVars: componentDefinition.hostVars || 0,\n            hostAttrs: componentDefinition.hostAttrs || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors || EMPTY_ARRAY,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    var autoRegisterModuleById = {};\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        if (def.id != null) {\n            noSideEffects(function () { autoRegisterModuleById[def.id] = def.type; });\n        }\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER_FACTORY = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var CHILD_HEAD = 13;\n    var CHILD_TAIL = 14;\n    var DECLARATION_VIEW = 15;\n    var DECLARATION_COMPONENT_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstCreatePass(tView, errMessage) {\n        assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');\n    }\n    function assertFirstUpdatePass(tView, errMessage) {\n        assertEqual(tView.firstUpdatePass, true, errMessage || 'Should only be called in first update pass.');\n    }\n    /**\n     * This is a basic sanity check that an object is probably a directive def. DirectiveDef is\n     * an interface, so we can't do a direct instanceof check.\n     */\n    function assertDirectiveDef(obj) {\n        if (obj.type === undefined || obj.selectors == undefined || obj.inputs === undefined) {\n            throwError(\"Expected a DirectiveDef/ComponentDef and this object does not seem to have the expected shape.\");\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    var MATH_ML_NAMESPACE = 'http://www.w3.org/1998/MathML/';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current `LView`.\n     */\n    function getLView() {\n        return instructionState.lFrame.lView;\n    }\n    /**\n     * Return the current `TView`.\n     */\n    function getTView() {\n        return instructionState.lFrame.tView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        // TODO(misko): remove this from the LView since it is ngDevMode=true mode only.\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            index = lFrame.bindingRootIndex = lFrame.tView.bindingStartIndex;\n        }\n        return index;\n    }\n    function getBindingIndex() {\n        return instructionState.lFrame.bindingIndex;\n    }\n    function setBindingIndex(value) {\n        return instructionState.lFrame.bindingIndex = value;\n    }\n    function nextBindingIndex() {\n        return instructionState.lFrame.bindingIndex++;\n    }\n    function incrementBindingIndex(count) {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingIndex;\n        lFrame.bindingIndex = lFrame.bindingIndex + count;\n        return index;\n    }\n    /**\n     * Set a new binding root index so that host template functions can execute.\n     *\n     * Bindings inside the host template are 0 index. But because we don't know ahead of time\n     * how many host bindings we have we can't pre-compute them. For this reason they are all\n     * 0 index and we just shift the root so that they match next available location in the LView.\n     *\n     * @param bindingRootIndex Root index for `hostBindings`\n     * @param currentDirectiveIndex `TData[currentDirectiveIndex]` will point to the current directive\n     *        whose `hostBindings` are being processed.\n     */\n    function setBindingRootForHostBindings(bindingRootIndex, currentDirectiveIndex) {\n        var lFrame = instructionState.lFrame;\n        lFrame.bindingIndex = lFrame.bindingRootIndex = bindingRootIndex;\n        lFrame.currentDirectiveIndex = currentDirectiveIndex;\n    }\n    /**\n     * When host binding is executing this points to the directive index.\n     * `TView.data[getCurrentDirectiveIndex()]` is `DirectiveDef`\n     * `LView[getCurrentDirectiveIndex()]` is directive instance.\n     */\n    function getCurrentDirectiveIndex() {\n        return instructionState.lFrame.currentDirectiveIndex;\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        if (ngDevMode) {\n            assertEqual(newLFrame.isParent, true, 'Expected clean LFrame');\n            assertEqual(newLFrame.lView, null, 'Expected clean LFrame');\n            assertEqual(newLFrame.tView, null, 'Expected clean LFrame');\n            assertEqual(newLFrame.selectedIndex, 0, 'Expected clean LFrame');\n            assertEqual(newLFrame.elementDepthCount, 0, 'Expected clean LFrame');\n            assertEqual(newLFrame.currentDirectiveIndex, -1, 'Expected clean LFrame');\n            assertEqual(newLFrame.currentNamespace, null, 'Expected clean LFrame');\n            assertEqual(newLFrame.currentSanitizer, null, 'Expected clean LFrame');\n            assertEqual(newLFrame.bindingRootIndex, -1, 'Expected clean LFrame');\n            assertEqual(newLFrame.currentQueryIndex, 0, 'Expected clean LFrame');\n        }\n        var tView = newView[TVIEW];\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        newLFrame.tView = tView;\n        newLFrame.contextLView = newView;\n        newLFrame.bindingIndex = tView.bindingStartIndex;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            tView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentSanitizer: null,\n            currentDirectiveIndex: -1,\n            bindingRootIndex: -1,\n            bindingIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    /**\n     * A lightweight version of leave which is used with DI.\n     *\n     * This function only resets `previousOrParentTNode` and `LView` as those are the only properties\n     * used with DI (`enterDI()`).\n     *\n     * NOTE: This function is reexported as `leaveDI`. However `leaveDI` has return type of `void` where\n     * as `leaveViewLight` has `LFrame`. This is so that `leaveViewLight` can be used in `leaveView`.\n     */\n    function leaveViewLight() {\n        var oldLFrame = instructionState.lFrame;\n        instructionState.lFrame = oldLFrame.parent;\n        oldLFrame.previousOrParentTNode = null;\n        oldLFrame.lView = null;\n        return oldLFrame;\n    }\n    /**\n     * This is a lightweight version of the `leaveView` which is needed by the DI system.\n     *\n     * NOTE: this function is an alias so that we can change the type of the function to have `void`\n     * return type.\n     */\n    var leaveDI = leaveViewLight;\n    /**\n     * Leave the current `LView`\n     *\n     * This pops the `LFrame` with the associated `LView` from the stack.\n     *\n     * IMPORTANT: We must zero out the `LFrame` values here otherwise they will be retained. This is\n     * because for performance reasons we don't release `LFrame` but rather keep it for next use.\n     */\n    function leaveView() {\n        var oldLFrame = leaveViewLight();\n        oldLFrame.isParent = true;\n        oldLFrame.tView = null;\n        oldLFrame.selectedIndex = 0;\n        oldLFrame.contextLView = null;\n        oldLFrame.elementDepthCount = 0;\n        oldLFrame.currentDirectiveIndex = -1;\n        oldLFrame.currentNamespace = null;\n        oldLFrame.currentSanitizer = null;\n        oldLFrame.bindingRootIndex = -1;\n        oldLFrame.bindingIndex = -1;\n        oldLFrame.currentQueryIndex = 0;\n    }\n    function nextContextImpl(level) {\n        var contextLView = instructionState.lFrame.contextLView =\n            walkUpViews(level, instructionState.lFrame.contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the currently selected element index.\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = SVG_NAMESPACE;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = MATH_ML_NAMESPACE;\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.lFrame.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        // TODO(misko): This should throw when there is no LView, but it turns out we can get here from\n        // `NodeStyleDebug` hence we return `null`. This should be fixed\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Most of the use of `document` in Angular is from within the DI system so it is possible to simply\n     * inject the `DOCUMENT` token and are done.\n     *\n     * Ivy is special because it does not rely upon the DI and must get hold of the document some other\n     * way.\n     *\n     * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.\n     * Wherever ivy needs the global document, it calls `getDocument()` instead.\n     *\n     * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to\n     * tell ivy what the global `document` is.\n     *\n     * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)\n     * by calling `setDocument()` when providing the `DOCUMENT` token.\n     */\n    var DOCUMENT = undefined;\n    /**\n     * Tell ivy what the `document` is for this platform.\n     *\n     * It is only necessary to call this if the current platform is not a browser.\n     *\n     * @param document The object representing the global `document` in this environment.\n     */\n    function setDocument(document) {\n        DOCUMENT = document;\n    }\n    /**\n     * Access the object that represents the `document` for this platform.\n     *\n     * Ivy calls this whenever it needs to access the `document` object.\n     * For example to create the renderer or to do sanitization.\n     */\n    function getDocument() {\n        if (DOCUMENT !== undefined) {\n            return DOCUMENT;\n        }\n        else if (typeof document !== 'undefined') {\n            return document;\n        }\n        // No \"document\" can be found. This should only happen if we are running ivy outside Angular and\n        // the current platform is not a browser. Since this is not a supported scenario at the moment\n        // this should not happen in Angular apps.\n        // Once we support running ivy outside of Angular we will need to publish `setDocument()` as a\n        // public API. Meanwhile we just return `undefined` and let the application fail.\n        return undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$2 = function (hostElement, rendererType) { return getDocument(); };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$2\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64 /* AT_SIGN */;\n    }\n    /**\n     * Merges `src` `TAttributes` into `dst` `TAttributes` removing any duplicates in the process.\n     *\n     * This merge function keeps the order of attrs same.\n     *\n     * @param dst Location of where the merged `TAttributes` should end up.\n     * @param src `TAttributes` which should be appended to `dst`\n     */\n    function mergeHostAttrs(dst, src) {\n        if (src === null || src.length === 0) {\n            // do nothing\n        }\n        else if (dst === null || dst.length === 0) {\n            // We have source, but dst is empty, just make a copy.\n            dst = src.slice();\n        }\n        else {\n            var srcMarker = -1 /* ImplicitAttributes */;\n            for (var i = 0; i < src.length; i++) {\n                var item = src[i];\n                if (typeof item === 'number') {\n                    srcMarker = item;\n                }\n                else {\n                    if (srcMarker === 0 /* NamespaceURI */) {\n                        // Case where we need to consume `key1`, `key2`, `value` items.\n                    }\n                    else if (srcMarker === -1 /* ImplicitAttributes */ ||\n                        srcMarker === 2 /* Styles */) {\n                        // Case where we have to consume `key1` and `value` only.\n                        mergeHostAttribute(dst, srcMarker, item, null, src[++i]);\n                    }\n                    else {\n                        // Case where we have to consume `key1` only.\n                        mergeHostAttribute(dst, srcMarker, item, null, null);\n                    }\n                }\n            }\n        }\n        return dst;\n    }\n    /**\n     * Append `key`/`value` to existing `TAttributes` taking region marker and duplicates into account.\n     *\n     * @param dst `TAttributes` to append to.\n     * @param marker Region where the `key`/`value` should be added.\n     * @param key1 Key to add to `TAttributes`\n     * @param key2 Key to add to `TAttributes` (in case of `AttributeMarker.NamespaceURI`)\n     * @param value Value to add or to overwrite to `TAttributes` Only used if `marker` is not Class.\n     */\n    function mergeHostAttribute(dst, marker, key1, key2, value) {\n        var i = 0;\n        // Assume that new markers will be inserted at the end.\n        var markerInsertPosition = dst.length;\n        // scan until correct type.\n        if (marker === -1 /* ImplicitAttributes */) {\n            markerInsertPosition = -1;\n        }\n        else {\n            while (i < dst.length) {\n                var dstValue = dst[i++];\n                if (typeof dstValue === 'number') {\n                    if (dstValue === marker) {\n                        markerInsertPosition = -1;\n                        break;\n                    }\n                    else if (dstValue > marker) {\n                        // We need to save this as we want the markers to be inserted in specific order.\n                        markerInsertPosition = i - 1;\n                        break;\n                    }\n                }\n            }\n        }\n        // search until you find place of insertion\n        while (i < dst.length) {\n            var item = dst[i];\n            if (typeof item === 'number') {\n                // since `i` started as the index after the marker, we did not find it if we are at the next\n                // marker\n                break;\n            }\n            else if (item === key1) {\n                // We already have same token\n                if (key2 === null) {\n                    if (value !== null) {\n                        dst[i + 1] = value;\n                    }\n                    return;\n                }\n                else if (key2 === dst[i + 1]) {\n                    dst[i + 2] = value;\n                    return;\n                }\n            }\n            // Increment counter.\n            i++;\n            if (key2 !== null)\n                i++;\n            if (value !== null)\n                i++;\n        }\n        // insert at location.\n        if (markerInsertPosition !== -1) {\n            dst.splice(markerInsertPosition, 0, marker);\n            i = markerInsertPosition + 1;\n        }\n        dst.splice(i++, 0, key1);\n        if (key2 !== null) {\n            dst.splice(i++, 0, key2);\n        }\n        if (value !== null) {\n            dst.splice(i++, 0, value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$3 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$3)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstCreatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return tNode.classes;\n        }\n        if (attrNameToInject === 'style') {\n            return tNode.styles;\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode !== null) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? lView[DECLARATION_COMPONENT_VIEW][T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(lView, currentTView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `LView` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(lView, tView, index, tNode) {\n        var value = lView[index];\n        var tData = tView.data;\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n                // This code path is hit for both directives and providers.\n                // For perf reasons, we want to avoid searching for hooks on providers.\n                // It does no harm to try (the hooks just won't exist), but the extra\n                // checks are unnecessary and this is a hot path. So we check to see\n                // if the index of the dependency is in the directive range for this\n                // tNode. If it's not, we know it's a provider and skip hook registration.\n                if (tView.firstCreatePass && index >= tNode.directiveStart) {\n                    ngDevMode && assertDirectiveDef(tData[index]);\n                    registerPreOrderHooks(index, tData[index], tView);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            var inertBodyElement = this.inertDocument.body;\n            if (inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(inertBodyElement);\n            }\n            inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (inertBodyElement.querySelector && !inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (inertBodyElement.querySelector && inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            // Note that previously we used to do something like `this.inertDocument.body.innerHTML = html`\n            // and we returned the inert `body` node. This was changed, because IE seems to treat setting\n            // `innerHTML` on an inserted element differently, compared to one that hasn't been inserted\n            // yet. In particular, IE appears to split some of the text into multiple text nodes rather\n            // than keeping them in a single one which ends up messing with Ivy's i18n parsing further\n            // down the line. This has been worked around by creating a new inert `body` and using it as\n            // the root node in which we insert the HTML.\n            var inertBody = this.inertDocument.createElement('body');\n            inertBody.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(inertBody);\n            }\n            return inertBody;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:attr|calc|var)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(getDocument(), renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        if (value === undefined && mode === undefined) {\n            // This is a workaround for the fact that `StyleSanitizeFn` should not exist once PR#34480\n            // lands. For now the `StyleSanitizeFn` and should act like `(value: any) => string` as a\n            // work around.\n            return ɵɵsanitizeStyle(prop);\n        }\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = stylePropNeedsSanitization(prop);\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : unwrapSafeValue(value);\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function stylePropNeedsSanitization(prop) {\n        return prop === 'background-image' || prop === 'backgroundImage' || prop === 'background' ||\n            prop === 'border-image' || prop === 'borderImage' || prop === 'border-image-source' ||\n            prop === 'borderImageSource' || prop === 'filter' || prop === 'list-style' ||\n            prop === 'listStyle' || prop === 'list-style-image' || prop === 'listStyleImage' ||\n            prop === 'clip-path' || prop === 'clipPath';\n    }\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(tView, index) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, tView.data.length, 'wrong index for TNode');\n        return tView.data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /** Returns a constant from `TConstants` instance. */\n    function getConstant(consts, index) {\n        return consts === null || index == null ? null : consts[index];\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n    function getLContainerActiveIndex(lContainer) {\n        return lContainer[ACTIVE_INDEX] >> 1 /* SHIFT */;\n    }\n    function setLContainerActiveIndex(lContainer, index) {\n        lContainer[ACTIVE_INDEX] = index << 1 /* SHIFT */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue, propName) {\n        var field = propName ? \" for '\" + propName + \"'\" : '';\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value\" + field + \": '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook?\";\n        }\n        // TODO: include debug context, see `viewDebugError` function in\n        // `packages/core/src/view/errors.ts` for reference.\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(msg);\n    }\n    function constructDetailsForInterpolation(lView, rootIndex, expressionIndex, meta, changedValue) {\n        var _a = __read(meta.split(INTERPOLATION_DELIMITER)), propName = _a[0], prefix = _a[1], chunks = _a.slice(2);\n        var oldValue = prefix, newValue = prefix;\n        for (var i = 0; i < chunks.length; i++) {\n            var slotIdx = rootIndex + i;\n            oldValue += \"\" + lView[slotIdx] + chunks[i];\n            newValue += \"\" + (slotIdx === expressionIndex ? changedValue : lView[slotIdx]) + chunks[i];\n        }\n        return { propName: propName, oldValue: oldValue, newValue: newValue };\n    }\n    /**\n     * Constructs an object that contains details for the ExpressionChangedAfterItHasBeenCheckedError:\n     * - property name (for property bindings or interpolations)\n     * - old and new values, enriched using information from metadata\n     *\n     * More information on the metadata storage format can be found in `storePropertyBindingMetadata`\n     * function description.\n     */\n    function getExpressionChangedErrorDetails(lView, bindingIndex, oldValue, newValue) {\n        var tData = lView[TVIEW].data;\n        var metadata = tData[bindingIndex];\n        if (typeof metadata === 'string') {\n            // metadata for property interpolation\n            if (metadata.indexOf(INTERPOLATION_DELIMITER) > -1) {\n                return constructDetailsForInterpolation(lView, bindingIndex, bindingIndex, metadata, newValue);\n            }\n            // metadata for property binding\n            return { propName: metadata, oldValue: oldValue, newValue: newValue };\n        }\n        // metadata is not available for this expression, check if this expression is a part of the\n        // property interpolation by going from the current binding index left and look for a string that\n        // contains INTERPOLATION_DELIMITER, the layout in tView.data for this case will look like this:\n        // [..., 'id�Prefix � and � suffix', null, null, null, ...]\n        if (metadata === null) {\n            var idx = bindingIndex - 1;\n            while (typeof tData[idx] !== 'string' && tData[idx + 1] === null) {\n                idx--;\n            }\n            var meta = tData[idx];\n            if (typeof meta === 'string') {\n                var matches = meta.match(new RegExp(INTERPOLATION_DELIMITER, 'g'));\n                // first interpolation delimiter separates property name from interpolation parts (in case of\n                // property interpolations), so we subtract one from total number of found delimiters\n                if (matches && (matches.length - 1) > bindingIndex - idx) {\n                    return constructDetailsForInterpolation(lView, idx, bindingIndex, meta, newValue);\n                }\n            }\n        }\n        return { propName: undefined, oldValue: oldValue, newValue: newValue };\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n    /**\n     * Returns `true` if the `TNode` has a directive which has `@Input()` for `class` binding.\n     *\n     * ```\n     * <div my-dir [class]=\"exp\"></div>\n     * ```\n     * and\n     * ```\n     * @Directive({\n     * })\n     * class MyDirective {\n     *   @Input()\n     *   class: string;\n     * }\n     * ```\n     *\n     * In the above case it is necessary to write the reconciled styling information into the\n     * directive's input.\n     *\n     * @param tNode\n     */\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    /**\n     * Returns `true` if the `TNode` has a directive which has `@Input()` for `style` binding.\n     *\n     * ```\n     * <div my-dir [style]=\"exp\"></div>\n     * ```\n     * and\n     * ```\n     * @Directive({\n     * })\n     * class MyDirective {\n     *   @Input()\n     *   class: string;\n     * }\n     * ```\n     *\n     * In the above case it is necessary to write the reconciled styling information into the\n     * directive's input.\n     *\n     * @param tNode\n     */\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Returns an index of `classToSearch` in `className` taking token boundaries into account.\n     *\n     * `classIndexOf('AB A', 'A', 0)` will be 3 (not 0 since `AB!==A`)\n     *\n     * @param className A string containing classes (whitespace separated)\n     * @param classToSearch A class name to locate\n     * @param startingIndex Starting location of search\n     * @returns an index of the located class (or -1 if not found)\n     */\n    function classIndexOf(className, classToSearch, startingIndex) {\n        ngDevMode && assertNotEqual(classToSearch, '', 'can not look for \"\" string.');\n        var end = className.length;\n        while (true) {\n            var foundIndex = className.indexOf(classToSearch, startingIndex);\n            if (foundIndex === -1)\n                return foundIndex;\n            if (foundIndex === 0 || className.charCodeAt(foundIndex - 1) <= 32 /* SPACE */) {\n                // Ensure that it has leading whitespace\n                var length_1 = classToSearch.length;\n                if (foundIndex + length_1 === end ||\n                    className.charCodeAt(foundIndex + length_1) <= 32 /* SPACE */) {\n                    // Ensure that it has trailing whitespace\n                    return foundIndex;\n                }\n            }\n            // False positive, keep searching from where we left off.\n            startingIndex = foundIndex + 1;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    /**\n     * Search the `TAttributes` to see if it contains `cssClassToMatch` (case insensitive)\n     *\n     * @param attrs `TAttributes` to search through.\n     * @param cssClassToMatch class to match (lowercase)\n     * @param isProjectionMode Whether or not class matching should look into the attribute `class` in\n     *    addition to the `AttributeMarker.Classes`.\n     */\n    function isCssClassMatching(attrs, cssClassToMatch, isProjectionMode) {\n        // TODO(misko): The fact that this function needs to know about `isProjectionMode` seems suspect.\n        // It is strange to me that sometimes the class information comes in form of `class` attribute\n        // and sometimes in form of `AttributeMarker.Classes`. Some investigation is needed to determine\n        // if that is the right behavior.\n        ngDevMode &&\n            assertEqual(cssClassToMatch, cssClassToMatch.toLowerCase(), 'Class name expected to be lowercase.');\n        var i = 0;\n        while (i < attrs.length) {\n            var item = attrs[i++];\n            if (isProjectionMode && item === 'class') {\n                item = attrs[i];\n                if (classIndexOf(item.toLowerCase(), cssClassToMatch, 0) !== -1) {\n                    return true;\n                }\n            }\n            else if (item === 1 /* Classes */) {\n                // We found the classes section. Start searching for the class.\n                while (i < attrs.length && typeof (item = attrs[i++]) == 'string') {\n                    // while we have strings\n                    if (item.toLowerCase() === cssClassToMatch)\n                        return true;\n                }\n                return false;\n            }\n        }\n        return false;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.attrs !== null) {\n                    if (!isCssClassMatching(tNode.attrs, selectorAttrValue, isProjectionMode)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        classIndexOf(compareAgainstClassName, selectorAttrValue, 0) !== -1 ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    function maybeWrapInNotSelector(isNegativeMode, chunk) {\n        return isNegativeMode ? ':not(' + chunk.trim() + ')' : chunk;\n    }\n    function stringifyCSSSelector(selector) {\n        var result = selector[0];\n        var i = 1;\n        var mode = 2 /* ATTRIBUTE */;\n        var currentChunk = '';\n        var isNegativeMode = false;\n        while (i < selector.length) {\n            var valueOrMarker = selector[i];\n            if (typeof valueOrMarker === 'string') {\n                if (mode & 2 /* ATTRIBUTE */) {\n                    var attrValue = selector[++i];\n                    currentChunk +=\n                        '[' + valueOrMarker + (attrValue.length > 0 ? '=\"' + attrValue + '\"' : '') + ']';\n                }\n                else if (mode & 8 /* CLASS */) {\n                    currentChunk += '.' + valueOrMarker;\n                }\n                else if (mode & 4 /* ELEMENT */) {\n                    currentChunk += ' ' + valueOrMarker;\n                }\n            }\n            else {\n                //\n                // Append current chunk to the final result in case we come across SelectorFlag, which\n                // indicates that the previous section of a selector is over. We need to accumulate content\n                // between flags to make sure we wrap the chunk later in :not() selector if needed, e.g.\n                // ```\n                //  ['', Flags.CLASS, '.classA', Flags.CLASS | Flags.NOT, '.classB', '.classC']\n                // ```\n                // should be transformed to `.classA :not(.classB .classC)`.\n                //\n                // Note: for negative selector part, we accumulate content between flags until we find the\n                // next negative flag. This is needed to support a case where `:not()` rule contains more than\n                // one chunk, e.g. the following selector:\n                // ```\n                //  ['', Flags.ELEMENT | Flags.NOT, 'p', Flags.CLASS, 'foo', Flags.CLASS | Flags.NOT, 'bar']\n                // ```\n                // should be stringified to `:not(p.foo) :not(.bar)`\n                //\n                if (currentChunk !== '' && !isPositive(valueOrMarker)) {\n                    result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n                    currentChunk = '';\n                }\n                mode = valueOrMarker;\n                // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative\n                // mode is maintained for remaining chunks of a selector.\n                isNegativeMode = isNegativeMode || !isPositive(mode);\n            }\n            i++;\n        }\n        if (currentChunk !== '') {\n            result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n        }\n        return result;\n    }\n    /**\n     * Generates string representation of CSS selector in parsed form.\n     *\n     * ComponentDef and DirectiveDef are generated with the selector in parsed form to avoid doing\n     * additional parsing at runtime (for example, for directive matching). However in some cases (for\n     * example, while bootstrapping a component), a string version of the selector is required to query\n     * for the host element on the page. This function takes the parsed form of a selector and returns\n     * its string representation.\n     *\n     * @param selectorList selector in parsed form\n     * @returns string representation of a given selector\n     */\n    function stringifyCSSSelectorList(selectorList) {\n        return selectorList.map(stringifyCSSSelector).join(',');\n    }\n    /**\n     * Extracts attributes and classes information from a given CSS selector.\n     *\n     * This function is used while creating a component dynamically. In this case, the host element\n     * (that is created dynamically) should contain attributes and classes specified in component's CSS\n     * selector.\n     *\n     * @param selector CSS selector in parsed form (in a form of array)\n     * @returns object with `attrs` and `classes` fields that contain extracted information\n     */\n    function extractAttrsAndClassesFromSelector(selector) {\n        var attrs = [];\n        var classes = [];\n        var i = 1;\n        var mode = 2 /* ATTRIBUTE */;\n        while (i < selector.length) {\n            var valueOrMarker = selector[i];\n            if (typeof valueOrMarker === 'string') {\n                if (mode === 2 /* ATTRIBUTE */) {\n                    if (valueOrMarker !== '') {\n                        attrs.push(valueOrMarker, selector[++i]);\n                    }\n                }\n                else if (mode === 8 /* CLASS */) {\n                    classes.push(valueOrMarker);\n                }\n            }\n            else {\n                // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative\n                // mode is maintained for remaining chunks of a selector. Since attributes and classes are\n                // extracted only for \"positive\" part of the selector, we can stop here.\n                if (!isPositive(mode))\n                    break;\n                mode = valueOrMarker;\n            }\n            i++;\n        }\n        return { attrs: attrs, classes: classes };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = (typeof ngDevMode === 'undefined' || ngDevMode) ? { __brand__: 'NO_CHANGE' } : {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getTView(), getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        // TODO(misko): Remove this function as it is no longer being used.\n        selectIndexInternal(getTView(), getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(tView, lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    function toTStylingRange(prev, next) {\n        ngDevMode && assertNumberInRange(prev, 0, 32767 /* UNSIGNED_MASK */);\n        ngDevMode && assertNumberInRange(next, 0, 32767 /* UNSIGNED_MASK */);\n        return (prev << 17 /* PREV_SHIFT */ | next << 2 /* NEXT_SHIFT */);\n    }\n    function getTStylingRangePrev(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange >> 17 /* PREV_SHIFT */) & 32767 /* UNSIGNED_MASK */;\n    }\n    function getTStylingRangePrevDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange & 2 /* PREV_DUPLICATE */) ==\n            2 /* PREV_DUPLICATE */;\n    }\n    function setTStylingRangePrev(tStylingRange, previous) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        ngDevMode && assertNumberInRange(previous, 0, 32767 /* UNSIGNED_MASK */);\n        return ((tStylingRange & ~4294836224 /* PREV_MASK */) |\n            (previous << 17 /* PREV_SHIFT */));\n    }\n    function setTStylingRangePrevDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange | 2 /* PREV_DUPLICATE */);\n    }\n    function getTStylingRangeNext(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange & 131068 /* NEXT_MASK */) >> 2 /* NEXT_SHIFT */;\n    }\n    function setTStylingRangeNext(tStylingRange, next) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        ngDevMode && assertNumberInRange(next, 0, 32767 /* UNSIGNED_MASK */);\n        return ((tStylingRange & ~131068 /* NEXT_MASK */) | //\n            next << 2 /* NEXT_SHIFT */);\n    }\n    function getTStylingRangeNextDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange & 1 /* NEXT_DUPLICATE */) ===\n            1 /* NEXT_DUPLICATE */;\n    }\n    function setTStylingRangeNextDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange | 1 /* NEXT_DUPLICATE */);\n    }\n    function getTStylingRangeTail(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        var next = getTStylingRangeNext(tStylingRange);\n        return next === 0 ? getTStylingRangePrev(tStylingRange) : next;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LVIEW_COMPONENT_CACHE;\n    var LVIEW_EMBEDDED_CACHE;\n    var LVIEW_ROOT;\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLViewFromTViewBlueprint(tView) {\n        var debugTView = tView;\n        var lView = getLViewToClone(debugTView.type, tView.template && tView.template.name);\n        return lView.concat(tView.blueprint);\n    }\n    function getLViewToClone(type, name) {\n        switch (type) {\n            case 0 /* Root */:\n                if (LVIEW_ROOT === undefined)\n                    LVIEW_ROOT = new (createNamedArrayType('LRootView'))();\n                return LVIEW_ROOT;\n            case 1 /* Component */:\n                if (LVIEW_COMPONENT_CACHE === undefined)\n                    LVIEW_COMPONENT_CACHE = new Map();\n                var componentArray = LVIEW_COMPONENT_CACHE.get(name);\n                if (componentArray === undefined) {\n                    componentArray = new (createNamedArrayType('LComponentView' + nameSuffix(name)))();\n                    LVIEW_COMPONENT_CACHE.set(name, componentArray);\n                }\n                return componentArray;\n            case 2 /* Embedded */:\n                if (LVIEW_EMBEDDED_CACHE === undefined)\n                    LVIEW_EMBEDDED_CACHE = new Map();\n                var embeddedArray = LVIEW_EMBEDDED_CACHE.get(name);\n                if (embeddedArray === undefined) {\n                    embeddedArray = new (createNamedArrayType('LEmbeddedView' + nameSuffix(name)))();\n                    LVIEW_EMBEDDED_CACHE.set(name, embeddedArray);\n                }\n                return embeddedArray;\n        }\n        throw new Error('unreachable code');\n    }\n    function nameSuffix(text) {\n        if (text == null)\n            return '';\n        var index = text.lastIndexOf('_Template');\n        return '_' + (index === -1 ? text : text.substr(0, index));\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up\n     * in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(type, //\n        id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstCreatePass, //\n        firstUpdatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.type = type;\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstCreatePass = firstCreatePass;\n            this.firstUpdatePass = firstUpdatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNode = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        directiveStylingLast, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        mergedAttrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        residualStyles, //\n        classes, //\n        residualClasses, //\n        classBindings, //\n        styleBindings) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.directiveStylingLast = directiveStylingLast;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.mergedAttrs = mergedAttrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.residualStyles = residualStyles;\n            this.classes = classes;\n            this.residualClasses = residualClasses;\n            this.classBindings = classBindings;\n            this.styleBindings = styleBindings;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 128 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"styleBindings_\", {\n            get: function () { return toDebugStyleBinding(this, false); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"classBindings_\", {\n            get: function () { return toDebugStyleBinding(this, true); },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    var TNodeDebug = TNode;\n    function toDebugStyleBinding(tNode, isClassBased) {\n        var tData = tNode.tView_.data;\n        var bindings = [];\n        var range = isClassBased ? tNode.classBindings : tNode.styleBindings;\n        var prev = getTStylingRangePrev(range);\n        var next = getTStylingRangeNext(range);\n        var isTemplate = next !== 0;\n        var cursor = isTemplate ? next : prev;\n        while (cursor !== 0) {\n            var itemKey = tData[cursor];\n            var itemRange = tData[cursor + 1];\n            bindings.unshift({\n                key: itemKey,\n                index: cursor,\n                isTemplate: isTemplate,\n                prevDuplicate: getTStylingRangePrevDuplicate(itemRange),\n                nextDuplicate: getTStylingRangeNextDuplicate(itemRange),\n                nextIndex: getTStylingRangeNext(itemRange),\n                prevIndex: getTStylingRangePrev(itemRange),\n            });\n            if (cursor === prev)\n                isTemplate = false;\n            cursor = getTStylingRangePrev(itemRange);\n        }\n        bindings.push((isClassBased ? tNode.residualClasses : tNode.residualStyles) || null);\n        return bindings;\n    }\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements\n     * (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element\n     * itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into\n             * a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        return {\n            html: toHtml(native),\n            native: native,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return getLContainerActiveIndex(this._raw_lContainer); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"hasTransplantedViews\", {\n            get: function () {\n                return (this._raw_lContainer[ACTIVE_INDEX] & 1 /* HAS_TRANSPLANTED_VIEWS */) ===\n                    1 /* HAS_TRANSPLANTED_VIEWS */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this._lView[TVIEW], this.nodeIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    var ɵ0$4 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$4)();\n    /**\n     * Process the `TView.expandoInstructions`. (Execute the `hostBindings`.)\n     *\n     * @param tView `TView` containing the `expandoInstructions`\n     * @param lView `LView` associated with the `TView`\n     */\n    function setHostBindingsByExecutingExpandoInstructions(tView, lView) {\n        ngDevMode && assertSame(tView, lView[TVIEW], '`LView` is not associated with the `TView`!');\n        try {\n            var expandoInstructions = tView.expandoInstructions;\n            if (expandoInstructions !== null) {\n                var bindingRootIndex = tView.expandoStartIndex;\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                // TODO(misko): PERF It is possible to get here with `TView.expandoInstructions` containing no\n                // functions to execute. This is wasteful as there is no work to be done, but we still need\n                // to iterate over the instructions.\n                // In example of this is in this test: `host_binding_spec.ts`\n                // `fit('should not cause problems if detectChanges is called when a property updates', ...`\n                // In the above test we get here with expando [0, 0, 1] which requires a lot of processing but\n                // there is no function to execute.\n                for (var i = 0; i < expandoInstructions.length; i++) {\n                    var instruction = expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce\n                            // `-0` which requires non standard math arithmetic and it can prevent VM optimizations.\n                            // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n                            // TODO(misko): PERF This should be refactored to use `~instruction` as that does not\n                            // suffer from `-0` and it is faster/more compact.\n                            currentElementIndex = 0 - instruction;\n                            setSelectedIndex(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            setBindingRootForHostBindings(bindingRootIndex, currentDirectiveIndex);\n                            var hostCtx = lView[currentDirectiveIndex];\n                            instruction(2 /* Update */, hostCtx);\n                        }\n                        // TODO(misko): PERF Relying on incrementing the `currentDirectiveIndex` here is\n                        // sub-optimal. The implications are that if we have a lot of directives but none of them\n                        // have host bindings we nevertheless need to iterate over the expando instructions to\n                        // update the counter. It would be much better if we could encode the\n                        // `currentDirectiveIndex` into the `expandoInstruction` array so that we only need to\n                        // iterate over those directives which actually have `hostBindings`.\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setSelectedIndex(-1);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && assertEqual(tView.type == 2 /* Embedded */ ? parentLView !== null : true, true, 'Embedded views must have parentLView');\n        lView[DECLARATION_COMPONENT_VIEW] =\n            tView.type == 2 /* Embedded */ ? parentLView[DECLARATION_COMPONENT_VIEW] : lView;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param tView `TView` associated with `LView`\n     * @param view The `LView` containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(tView, lView, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            if (tView.firstCreatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    lView.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(tView, lView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(tView, lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstCreatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstCreatePass) {\n                tView.firstCreatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(tView, lView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var flags = lView[FLAGS];\n        if ((flags & 256 /* Destroyed */) === 256 /* Destroyed */)\n            return;\n        enterView(lView, lView[T_HOST]);\n        var checkNoChangesMode = getCheckNoChangesMode();\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingIndex(tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(tView, lView, templateFn, 2 /* Update */, context);\n            }\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoCheck)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindingsByExecutingExpandoInstructions(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n            if (tView.firstUpdatePass === true) {\n                // We need to make sure that we only flip the flag on successful `refreshView` only\n                // Don't do this in `finally` block.\n                // If we did this in `finally` block then an exception could block the execution of styling\n                // instructions which in turn would be unable to insert themselves into the styling linked\n                // list. The result of this would be that if the exception would not be throw on subsequent CD\n                // the styling would be unable to process it data and reflect to the DOM.\n                tView.firstUpdatePass = false;\n            }\n            // Do not reset the dirty state when running in check no changes mode. We don't want components\n            // to behave differently depending on whether check no changes is enabled or not. For example:\n            // Marking an OnPush component as dirty from within the `ngAfterViewInit` hook in order to\n            // refresh a `NgClass` binding should work. If we would reset the dirty state in the check\n            // no changes cycle, the component would be not be dirty for the next update pass. This would\n            // be different in production mode where the component dirty state is not reset.\n            if (!checkNoChangesMode) {\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            }\n        }\n        finally {\n            leaveView();\n        }\n    }\n    function renderComponentOrTemplate(tView, lView, templateFn, context) {\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(lView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                renderView(tView, lView, context);\n            }\n            refreshView(tView, lView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(tView, lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setSelectedIndex(-1);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(tView, lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n        if ((tNode.flags & 128 /* hasHostBindings */) === 128 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTComponentView(def) {\n        return def.tView ||\n            (def.tView = createTView(1 /* Component */, -1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(type, viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(type, viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstCreatePass: boolean,\n            true, // firstUpdatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TConstants|null\n            {\n                type: type,\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstCreatePass: true,\n                firstUpdatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    function assertHostNodeExists(rElement, elementOrSelector) {\n        if (!rElement) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param rendererFactory Factory function to create renderer instance.\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     * @param encapsulation View Encapsulation defined for component that requests host element.\n     */\n    function locateHostElement(renderer, elementOrSelector, encapsulation) {\n        if (isProceduralRenderer(renderer)) {\n            // When using native Shadow DOM, do not clear host element to allow native slot projection\n            var preserveContent = encapsulation === exports.ViewEncapsulation.ShadowDom;\n            return renderer.selectRootElement(elementOrSelector, preserveContent);\n        }\n        var rElement = typeof elementOrSelector === 'string' ?\n            renderer.querySelector(elementOrSelector) :\n            elementOrSelector;\n        ngDevMode && assertHostNodeExists(rElement, elementOrSelector);\n        // Always clear host element's content when Renderer3 is in use. For procedural renderer case we\n        // make it depend on whether ShadowDom encapsulation is used (in which case the content should be\n        // preserved to allow native slot projection). ShadowDom encapsulation requires procedural\n        // renderer, and procedural renderer case is handled above.\n        rElement.textContent = '';\n        return rElement;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(tView, lView, context, cleanupFn) {\n        var lCleanup = getLCleanup(lView);\n        lCleanup.push(context);\n        if (tView.firstCreatePass) {\n            getTViewCleanup(tView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(tView, lView, cleanupFn) {\n        getLCleanup(lView).push(cleanupFn);\n        if (tView.firstCreatePass) {\n            getTViewCleanup(tView).push(lView[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeDebug(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // directiveStylingLast: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // mergedAttrs\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        null, // inputs: PropertyAliases|null\n        null, // outputs: PropertyAliases|null\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: string|null\n        undefined, // residualStyles: string|null\n        null, // classes: string|null\n        undefined, // residualClasses: string|null\n        0, // classBindings: TStylingRange;\n        0) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                directiveStylingLast: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                mergedAttrs: null,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: null,\n                outputs: null,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                residualStyles: undefined,\n                classes: null,\n                residualClasses: undefined,\n                classBindings: 0,\n                styleBindings: 0,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(tView, lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(tView, index);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(tView, lView, dataValue, propName, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(tView, lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(tView, lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+1]\n             */\n            for (var i = 0; i < dataValue.length; i += 2) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 1], value);\n            }\n        }\n    }\n    function validateProperty(tView, lView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        if (matchingSchemas(tView, lView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName)) {\n            return true;\n        }\n        // Note: `typeof Node` returns 'function' in most browsers, but on IE it is 'object' so we\n        // need to account for both here, while being careful for `typeof null` also returning 'object'.\n        return typeof Node === 'undefined' || Node === null || !(element instanceof Node);\n    }\n    function matchingSchemas(tView, lView, tagName) {\n        var schemas = tView.schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, lView, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, lView, def);\n        }\n        var directive = getNodeInjectable(lView, tView, lView.length - 1, rootTNode);\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(rootTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstCreatePass(tView);\n        var hasDirectives = false;\n        if (getBindingsEnabled()) {\n            var directiveDefs = findDirectiveDefMatches(tView, lView, tNode);\n            var exportsMap = localRefs === null ? null : { '': -1 };\n            if (directiveDefs !== null) {\n                var totalDirectiveHostVars = 0;\n                hasDirectives = true;\n                initTNodeFlags(tNode, tView.data.length, directiveDefs.length);\n                // When the same token is provided by several directives on the same node, some rules apply in\n                // the viewEngine:\n                // - viewProviders have priority over providers\n                // - the last directive in NgModule.declarations has priority over the previous one\n                // So to match these rules, the order in which providers are added in the arrays is very\n                // important.\n                for (var i = 0; i < directiveDefs.length; i++) {\n                    var def = directiveDefs[i];\n                    if (def.providersResolver)\n                        def.providersResolver(def);\n                }\n                generateExpandoInstructionBlock(tView, tNode, directiveDefs.length);\n                var preOrderHooksFound = false;\n                var preOrderCheckHooksFound = false;\n                for (var i = 0; i < directiveDefs.length; i++) {\n                    var def = directiveDefs[i];\n                    // Merge the attrs in the order of matches. This assumes that the first directive is the\n                    // component itself, so that the component has the least priority.\n                    tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, def.hostAttrs);\n                    baseResolveDirective(tView, lView, def);\n                    saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                    if (def.contentQueries !== null)\n                        tNode.flags |= 8 /* hasContentQuery */;\n                    if (def.hostBindings !== null || def.hostAttrs !== null || def.hostVars !== 0)\n                        tNode.flags |= 128 /* hasHostBindings */;\n                    // Only push a node index into the preOrderHooks array if this is the first\n                    // pre-order hook found on this node.\n                    if (!preOrderHooksFound && (def.onChanges || def.onInit || def.doCheck)) {\n                        // We will push the actual hook function into this array later during dir instantiation.\n                        // We cannot do it now because we must ensure hooks are registered in the same\n                        // order that directives are created (i.e. injection order).\n                        (tView.preOrderHooks || (tView.preOrderHooks = [])).push(tNode.index - HEADER_OFFSET);\n                        preOrderHooksFound = true;\n                    }\n                    if (!preOrderCheckHooksFound && (def.onChanges || def.doCheck)) {\n                        (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(tNode.index - HEADER_OFFSET);\n                        preOrderCheckHooksFound = true;\n                    }\n                    addHostBindingsToExpandoInstructions(tView, def);\n                    totalDirectiveHostVars += def.hostVars;\n                }\n                initializeInputAndOutputAliases(tView, tNode);\n                growHostVarsSpace(tView, lView, totalDirectiveHostVars);\n            }\n            if (exportsMap)\n                cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        }\n        // Merge the template attrs last so that they have the highest priority.\n        tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, tNode.attrs);\n        return hasDirectives;\n    }\n    /**\n     * Add `hostBindings` to the `TView.expandoInstructions`.\n     *\n     * @param tView `TView` to which the `hostBindings` should be added.\n     * @param def `ComponentDef`/`DirectiveDef`, which contains the `hostVars`/`hostBindings` to add.\n     */\n    function addHostBindingsToExpandoInstructions(tView, def) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var expando = tView.expandoInstructions;\n        // TODO(misko): PERF we are adding `hostBindings` even if there is nothing to add! This is\n        // suboptimal for performance. `def.hostBindings` may be null,\n        // but we still need to push null to the array as a placeholder\n        // to ensure the directive counter is incremented (so host\n        // binding functions always line up with the corrective directive).\n        // This is suboptimal for performance. See `currentDirectiveIndex`\n        //  comment in `setHostBindingsByExecutingExpandoInstructions` for more\n        // details.  expando.push(def.hostBindings);\n        expando.push(def.hostBindings);\n        var hostVars = def.hostVars;\n        if (hostVars !== 0) {\n            expando.push(def.hostVars);\n        }\n    }\n    /**\n     * Grow the `LView`, blueprint and `TView.data` to accommodate the `hostBindings`.\n     *\n     * To support locality we don't know ahead of time how many `hostVars` of the containing directives\n     * we need to allocate. For this reason we allow growing these data structures as we discover more\n     * directives to accommodate them.\n     *\n     * @param tView `TView` which needs to be grown.\n     * @param lView `LView` which needs to be grown.\n     * @param count Size by which we need to grow the data structures.\n     */\n    function growHostVarsSpace(tView, lView, count) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertSame(tView, lView[TVIEW], '`LView` must be associated with `TView`!');\n        for (var i = 0; i < count; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode, native) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstCreatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        attachPatchData(native, lView);\n        var initialInputs = tNode.initialInputs;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var isComponent = isComponentDef(def);\n            if (isComponent) {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */);\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(lView, tView, i, tNode);\n            attachPatchData(directive, lView);\n            if (initialInputs !== null) {\n                setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);\n            }\n            if (isComponent) {\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                componentView[CONTEXT] = directive;\n            }\n        }\n    }\n    function invokeDirectivesHostBindings(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstCreatePass = tView.firstCreatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setSelectedIndex(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = lView[i];\n                if (def.hostBindings !== null || def.hostVars !== 0 || def.hostAttrs !== null) {\n                    invokeHostBindingsInCreationMode(def, directive);\n                }\n                else if (firstCreatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setSelectedIndex(-1);\n        }\n    }\n    /**\n     * Invoke the host bindings in creation mode.\n     *\n     * @param def `DirectiveDef` which may contain the `hostBindings` function.\n     * @param directive Instance of directive.\n     */\n    function invokeHostBindingsInCreationMode(def, directive) {\n        if (def.hostBindings !== null) {\n            def.hostBindings(1 /* Create */, directive);\n        }\n    }\n    /**\n     * Generates a new block in TView.expandoInstructions for this node.\n     *\n     * Each expando block starts with the element index (turned negative so we can distinguish\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n     */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'Expando block should only be generated on first create pass.');\n        // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce `-0` which\n        // requires non standard math arithmetic and it can prevent VM optimizations.\n        // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n        var elementIndex = HEADER_OFFSET - tNode.index;\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveDefMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (isComponentDef(def))\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initTNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTComponentView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, tView, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(tView, index);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */ << 1 /* SHIFT */, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            var activeIndexFlag = void 0;\n            if (isLContainer(viewOrContainer) &&\n                (activeIndexFlag = viewOrContainer[ACTIVE_INDEX]) >> 1 /* SHIFT */ ===\n                    -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    if (viewAttachedToChangeDetector(embeddedLView)) {\n                        refreshView(embeddedTView, embeddedLView, embeddedTView.template, embeddedLView[CONTEXT]);\n                    }\n                }\n                if ((activeIndexFlag & 1 /* HAS_TRANSPLANTED_VIEWS */) !== 0) {\n                    // We should only CD moved views if the component where they were inserted does not match\n                    // the component where they were declared and insertion is on-push. Moved views also\n                    // contains intra component moves, or check-always which need to be skipped.\n                    refreshTransplantedViews(viewOrContainer, lView[DECLARATION_COMPONENT_VIEW]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /**\n     * Refresh transplanted LViews.\n     *\n     * See: `ActiveIndexFlag.HAS_TRANSPLANTED_VIEWS` and `LView[DECLARATION_COMPONENT_VIEW]` for\n     * explanation of transplanted views.\n     *\n     * @param lContainer The `LContainer` which has transplanted views.\n     * @param declaredComponentLView The `lContainer` parent component `LView`.\n     */\n    function refreshTransplantedViews(lContainer, declaredComponentLView) {\n        var movedViews = lContainer[MOVED_VIEWS];\n        ngDevMode && assertDefined(movedViews, 'Transplanted View flags set but missing MOVED_VIEWS');\n        for (var i = 0; i < movedViews.length; i++) {\n            var movedLView = movedViews[i];\n            var insertionLContainer = movedLView[PARENT];\n            ngDevMode && assertLContainer(insertionLContainer);\n            var insertedComponentLView = insertionLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(insertedComponentLView, 'Missing LView');\n            // Check if we have a transplanted view by compering declaration and insertion location.\n            if (insertedComponentLView !== declaredComponentLView) {\n                // Yes the `LView` is transplanted.\n                // Here we would like to know if the component is `OnPush`. We don't have\n                // explicit `OnPush` flag instead we set `CheckAlways` to false (which is `OnPush`)\n                // Not to be confused with `ManualOnPush` which is used with wether a DOM event\n                // should automatically mark a view as dirty.\n                var insertionComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) === 0;\n                if (insertionComponentIsOnPush) {\n                    // Here we know that the template has been transplanted across components and is\n                    // on-push (not just moved within a component). If the insertion is marked dirty, then\n                    // there is no need to CD here as we will do it again later when we get to insertion\n                    // point.\n                    var movedTView = movedLView[TVIEW];\n                    ngDevMode && assertDefined(movedTView, 'TView must be allocated');\n                    refreshView(movedTView, movedLView, movedTView.template, movedLView[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var componentTView = componentView[TVIEW];\n            refreshView(componentTView, componentView, componentTView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        var componentTView = componentView[TVIEW];\n        syncViewWithBlueprint(componentTView, componentView);\n        renderView(componentTView, componentView, componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param tView The `TView` that contains the blueprint for syncing\n     * @param lView The view to sync\n     */\n    function syncViewWithBlueprint(tView, lView) {\n        for (var i = lView.length; i < tView.blueprint.length; i++) {\n            lView.push(tView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(tView, lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(tView, lView, context) {\n        var rendererFactory = lView[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            refreshView(tView, lView, tView.template, context);\n        }\n        catch (error) {\n            handleError(lView, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(tView, view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(tView, view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getLCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(tView) {\n        return tView.cleanup || (tView.cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = unwrapLView(lView[tNode.index]);\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param tView The current TView\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     *        possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(tView, lView, inputs, publicName, value) {\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            if (def.setInput !== null) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(tView, lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(tView.node, lView);\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(tView, lView, renderer, action, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param tView The `TView' of the `LView` to be detached\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(tView, lView) {\n        applyView(tView, lView, lView[RENDERER], 2 /* Detach */, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView[TVIEW], rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    isLView(lViewOrLContainer) && cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                if (lViewOrLContainer === null)\n                    lViewOrLContainer = rootView;\n                isLView(lViewOrLContainer) && cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param tView The `TView' of the `LView` to insert\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(tView, lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(tView);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertDefined(lView, 'LView required');\n        ngDevMode && assertLContainer(declarationContainer);\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var insertedLContainer = lView[PARENT];\n        ngDevMode && assertLContainer(insertedLContainer);\n        var insertedComponentLView = insertedLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n        ngDevMode && assertDefined(insertedComponentLView, 'Missing insertedComponentLView');\n        var insertedComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) !== 16 /* CheckAlways */;\n        if (insertedComponentIsOnPush) {\n            var declaredComponentLView = lView[DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(declaredComponentLView, 'Missing declaredComponentLView');\n            if (declaredComponentLView !== insertedComponentLView) {\n                // At this point the declaration-component is not same as insertion-component and we are in\n                // on-push mode, this means that this is a transplanted view. Mark the declared lView as\n                // having\n                // transplanted views so that those views can participate in CD.\n                declarationContainer[ACTIVE_INDEX] |= 1 /* HAS_TRANSPLANTED_VIEWS */;\n            }\n        }\n        if (movedViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            movedViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = movedViews.indexOf(lView);\n        movedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach[TVIEW], viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView[TVIEW], detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting clean up (e.g. removing listeners, calling onDestroys).\n     *\n     * @param tView The `TView' of the `LView` to be destroyed\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(tView, lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(tView, lView, renderer, 3 /* Destroy */, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param tView `TView` for the `LView` to clean up.\n     * @param lView The LView to clean up\n     */\n    function cleanUpView(tView, lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            lView[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            lView[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(tView, lView);\n            removeListeners(tView, lView);\n            var hostTNode = lView[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ &&\n                isProceduralRenderer(lView[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                lView[RENDERER].destroy();\n            }\n            var declarationContainer = lView[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(lView[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== lView[PARENT]) {\n                    detachMovedView(declarationContainer, lView);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = lView[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(tView);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(tView, lView) {\n        var tCleanup = tView.cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(tView, lView) {\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = lView[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tView, tNode, currentView) {\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                ngDevMode && assertNodeOfPossibleTypes(hostTNode, 3 /* Element */);\n                return currentView[HOST];\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = tView.data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param tView The `TView' to be appended\n     * @param lView The current LView\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(tView, lView, childEl, childTNode) {\n        var renderParent = getRenderParent(tView, childTNode, lView);\n        if (renderParent != null) {\n            var renderer = lView[RENDERER];\n            var parentTNode = childTNode.parent || lView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, lView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Returns the first native node for a given LView, starting from the provided TNode.\n     *\n     * Native nodes are returned in the order in which those appear in the native tree (DOM).\n     */\n    function getFirstNativeNode(lView, tNode) {\n        if (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */, 5 /* IcuContainer */, 1 /* Projection */);\n            var tNodeType = tNode.type;\n            if (tNodeType === 3 /* Element */) {\n                return getNativeByTNode(tNode, lView);\n            }\n            else if (tNodeType === 0 /* Container */) {\n                return getBeforeNodeForView(-1, lView[tNode.index]);\n            }\n            else if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                var elIcuContainerChild = tNode.child;\n                if (elIcuContainerChild !== null) {\n                    return getFirstNativeNode(lView, elIcuContainerChild);\n                }\n                else {\n                    var rNodeOrLContainer = lView[tNode.index];\n                    if (isLContainer(rNodeOrLContainer)) {\n                        return getBeforeNodeForView(-1, rNodeOrLContainer);\n                    }\n                    else {\n                        return unwrapRNode(rNodeOrLContainer);\n                    }\n                }\n            }\n            else {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedTNode = componentHost.projection[tNode.projection];\n                if (firstProjectedTNode != null) {\n                    return getFirstNativeNode(parentView, firstProjectedTNode);\n                }\n                else {\n                    return getFirstNativeNode(lView, tNode.next);\n                }\n            }\n        }\n        return null;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            var firstTNodeOfView = lView[TVIEW].firstChild;\n            if (firstTNodeOfView !== null) {\n                return getFirstNativeNode(lView, firstTNodeOfView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param tView The `TView' which needs to be inserted, detached, destroyed\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(tView, lView, renderer, action, renderParent, beforeNode) {\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param tView The `TView` of `LView` which needs to be inserted, detached, destroyed\n     * @param lView The `LView` which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(tView, lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tView, tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = lView[DECLARATION_COMPONENT_VIEW];\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(lView[TVIEW], lView, renderer, action, renderParent, anchor);\n        }\n    }\n    /**\n     * Writes class/style to element.\n     *\n     * @param renderer Renderer to use.\n     * @param isClassBased `true` if it should be written to `class` (`false` to write to `style`)\n     * @param rNode The Node to write to.\n     * @param prop Property to write to. This would be the class/style name.\n     * @param value Value to write. If `null`/`undefined`/`false` this is considered a remove (set/add\n     *        otherwise).\n     */\n    function applyStyling(renderer, isClassBased, rNode, prop, value) {\n        var isProcedural = isProceduralRenderer(renderer);\n        if (isClassBased) {\n            // We actually want JS true/false here because any truthy value should add the class\n            if (!value) {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProcedural) {\n                    renderer.removeClass(rNode, prop);\n                }\n                else {\n                    rNode.classList.remove(prop);\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProcedural) {\n                    renderer.addClass(rNode, prop);\n                }\n                else {\n                    ngDevMode && assertDefined(rNode.classList, 'HTMLElement expected');\n                    rNode.classList.add(prop);\n                }\n            }\n        }\n        else {\n            // TODO(misko): Can't import RendererStyleFlags2.DashCase as it causes imports to be resolved in\n            // different order which causes failures. Using direct constant as workaround for now.\n            var flags = prop.indexOf('-') == -1 ? undefined : 2 /* RendererStyleFlags2.DashCase */;\n            if (value == null /** || value === undefined */) {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProcedural) {\n                    renderer.removeStyle(rNode, prop, flags);\n                }\n                else {\n                    rNode.style.removeProperty(prop);\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProcedural) {\n                    renderer.setStyle(rNode, prop, value, flags);\n                }\n                else {\n                    ngDevMode && assertDefined(rNode.style, 'HTMLElement expected');\n                    rNode.style.setProperty(prop, value);\n                }\n            }\n        }\n    }\n    /**\n     * Write `cssText` to `RElement`.\n     *\n     * This function does direct write without any reconciliation. Used for writing initial values, so\n     * that static styling values do not pull in the style parser.\n     *\n     * @param renderer Renderer to use\n     * @param element The element which needs to be updated.\n     * @param newValue The new class list to write.\n     */\n    function writeDirectStyle(renderer, element, newValue) {\n        ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n        if (isProceduralRenderer(renderer)) {\n            renderer.setAttribute(element, 'style', newValue);\n        }\n        else {\n            element.style.cssText = newValue;\n        }\n        ngDevMode && ngDevMode.rendererSetStyle++;\n    }\n    /**\n     * Write `className` to `RElement`.\n     *\n     * This function does direct write without any reconciliation. Used for writing initial values, so\n     * that static styling values do not pull in the style parser.\n     *\n     * @param renderer Renderer to use\n     * @param element The element which needs to be updated.\n     * @param newValue The new class list to write.\n     */\n    function writeDirectClass(renderer, element, newValue) {\n        ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n        if (isProceduralRenderer(renderer)) {\n            if (newValue === '') {\n                // There are tests in `google3` which expect `element.getAttribute('class')` to be `null`.\n                renderer.removeAttribute(element, 'class');\n            }\n            else {\n                renderer.setAttribute(element, 'class', newValue);\n            }\n        }\n        else {\n            element.className = newValue;\n        }\n        ngDevMode && ngDevMode.rendererSetClassName++;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If `startTNode.parent` exists and has an injector, returns TNode for that injector.\n     * Otherwise, unwraps a parent injector location number to find the view offset from the current\n     * injector, then walks up the declaration view tree until the TNode of the parent injector is\n     * found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        // If there is an injector on the parent TNode, retrieve the TNode for that injector.\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var tNode = startTNode.parent;\n            // If tNode.injectorIndex === tNode.parent.injectorIndex, then the index belongs to a parent\n            // injector.\n            while (tNode.parent != null && injectorIndex == tNode.parent.injectorIndex) {\n                tNode = tNode.parent;\n            }\n            return tNode;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                var lView = this._lView;\n                if (lView[HOST] == null) {\n                    var hostTView = lView[T_HOST];\n                    return collectNativeNodes(lView[TVIEW], lView, hostTView.child, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView[TVIEW], this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView[TVIEW], this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._cdRefInjectingView || this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView[TVIEW], this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView[TVIEW], this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView[TVIEW], this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(tView, lView, tNode, result, isProjection) {\n        if (isProjection === void 0) { isProjection = false; }\n        while (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 1 /* Projection */, 4 /* ElementContainer */, 5 /* IcuContainer */);\n            var lNode = lView[tNode.index];\n            if (lNode !== null) {\n                result.push(unwrapRNode(lNode));\n            }\n            // A given lNode can represent either a native node or a LContainer (when it is a host of a\n            // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n            // from the views in this container.\n            if (isLContainer(lNode)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n                    var lViewInAContainer = lNode[i];\n                    var lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n                    if (lViewFirstChildTNode !== null) {\n                        collectNativeNodes(lViewInAContainer[TVIEW], lViewInAContainer, lViewFirstChildTNode, result);\n                    }\n                }\n            }\n            var tNodeType = tNode.type;\n            if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                collectNativeNodes(tView, lView, tNode.child, result);\n            }\n            else if (tNodeType === 1 /* Projection */) {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedNode = componentHost.projection[tNode.projection];\n                if (firstProjectedNode !== null && parentView !== null) {\n                    collectNativeNodes(parentView[TVIEW], parentView, firstProjectedNode, result, true);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef, _super);\n                function ElementRef() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef, _super);\n                function TemplateRef(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var embeddedLView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    embeddedLView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        embeddedLView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(embeddedTView, embeddedLView, context);\n                    var viewRef = new ViewRef(embeddedLView);\n                    viewRef._tViewNode = embeddedLView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef, _super);\n                function ViewContainerRef(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef.prototype.insert = function (viewRef, index) {\n                    var lView = viewRef._lView;\n                    var tView = lView[TVIEW];\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, detach it first so we clean up references appropriately.\n                        var prevIdx = this.indexOf(viewRef);\n                        // A view might be attached either to this or a different container. The `prevIdx` for\n                        // those cases will be:\n                        // equal to -1 for views attached to this ViewContainerRef\n                        // >= 0 for views attached to a different ViewContainerRef\n                        if (prevIdx !== -1) {\n                            this.detach(prevIdx);\n                        }\n                        else {\n                            var prevLContainer = lView[PARENT];\n                            ngDevMode && assertEqual(isLContainer(prevLContainer), true, 'An attached view should have its PARENT point to a container.');\n                            // We need to re-create a R3ViewContainerRef instance since those are not stored on\n                            // LView (nor anywhere else).\n                            var prevVCRef = new R3ViewContainerRef(prevLContainer, prevLContainer[T_HOST], prevLContainer[PARENT]);\n                            prevVCRef.detach(prevVCRef.indexOf(viewRef));\n                        }\n                    }\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(tView, lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(tView, lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    return this.insert(viewRef, newIndex);\n                };\n                ViewContainerRef.prototype.indexOf = function (viewRef) {\n                    var viewRefsArr = this._lContainer[VIEW_REFS];\n                    return viewRefsArr !== null ? viewRefsArr.indexOf(viewRef) : -1;\n                };\n                ViewContainerRef.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, \"ViewRef index must be positive, got \" + index);\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            setLContainerActiveIndex(lContainer, -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */);\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            // The comment node in question is already part of the DOM structure so we don't need to append\n            // it again.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n                // A `ViewContainerRef` can be injected by the root (topmost / bootstrapped) component. In\n                // this case we can't use TView / TNode data structures to insert container's marker node\n                // (both a parent of a comment node and the comment node itself are not part of any view). In\n                // this specific case we use low-level DOM manipulation to insert container's marker (comment)\n                // node.\n                if (isRootView(hostView)) {\n                    var renderer = hostView[RENDERER];\n                    var hostNative = getNativeByTNode(hostTNode, hostView);\n                    var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                    nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n                }\n                else {\n                    appendChild(hostView[TVIEW], hostView, commentNode, hostTNode);\n                }\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */ || tNode.type === 5 /* IcuContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = lView[DECLARATION_COMPONENT_VIEW]; // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var ɵ0$5 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep) && dep.length > 0) {\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                var proto = Object.getPrototypeOf(param);\n                if (param instanceof Optional || proto.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || proto.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || proto.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || proto.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else if (dep === undefined || (Array.isArray(dep) && dep.length === 0)) {\n            meta.token = undefined;\n            meta.resolved = R3ResolvedDependencyType.Invalid;\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n            // On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n            // which will break inheriting the injectable definition from a grandparent through an\n            // undecorated parent class. We work around it by defining a method which should be used\n            // as a fallback. This should only be a problem in JIT mode, because in AOT TypeScript\n            // seems to have a workaround for static properties. When inheriting from an undecorated\n            // parent is no longer supported in v10, this can safely be removed.\n            if (!type.hasOwnProperty(NG_PROV_DEF_FALLBACK)) {\n                type[NG_PROV_DEF_FALLBACK] = function () { return type[NG_PROV_DEF]; };\n            }\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        var compiler = getCompilerFacade();\n                        ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            target: compiler.R3FactoryTarget.Pipe\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var ɵ0$6 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$6 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$7 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$8);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Track the InjectorType and add a provider for it. It's important that this is done after the\n            // def's imports.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            var factory = providerToFactory(provider, ngModuleType, providers);\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            var unwrappedProvider = resolveForwardRef(provider);\n            return getFactoryDef(unwrappedProvider) || injectableDefOrInjectorDefFactory(unwrappedProvider);\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return getFactoryDef(classRef_1) || injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface. Injectors are configured\n     * with [providers](guide/glossary#provider) that associate\n     * dependencies of various types with [injection tokens](guide/glossary#di-token).\n     *\n     * @see [\"DI Providers\"](guide/dependency-injection-providers).\n     * @see `StaticProvider`\n     *\n     * @usageNotes\n     *\n     *  The following example creates a service injector instance.\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     *\n     * ### Usage example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var ɵ0$9 = IDENT;\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var ɵ1$1 = MULTI_PROVIDER_FN;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = {};\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$a = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$a, Query);\n    var ɵ1$2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$2, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Compute the static styling (class/style) from `TAttributes`.\n     *\n     * This function should be called during `firstCreatePass` only.\n     *\n     * @param tNode The `TNode` into which the styling information should be loaded.\n     * @param attrs `TAttributes` containing the styling information.\n     */\n    function computeStaticStyling(tNode, attrs) {\n        ngDevMode &&\n            assertFirstCreatePass(getTView(), 'Expecting to be called in first template pass only');\n        var styles = tNode.styles;\n        var classes = tNode.classes;\n        var mode = 0;\n        for (var i = 0; i < attrs.length; i++) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                mode = value;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = concatStringsWithSpace(classes, value);\n            }\n            else if (mode == 2 /* Styles */) {\n                var style = value;\n                var styleValue = attrs[++i];\n                styles = concatStringsWithSpace(styles, style + ': ' + styleValue + ';');\n            }\n        }\n        styles !== null && (tNode.styles = styles);\n        classes !== null && (tNode.classes = classes);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isIterable(obj) {\n        return obj !== null && typeof obj === 'object' && obj[getSymbolIterator()] !== undefined;\n    }\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /**\n     * Updates binding if changed, then returns whether it was updated.\n     *\n     * This function also checks the `CheckNoChangesMode` and throws if changes are made.\n     * Some changes (Objects/iterables) during `CheckNoChangesMode` are exempt to comply with VE\n     * behavior.\n     *\n     * @param lView current `LView`\n     * @param bindingIndex The binding in the `LView` to check\n     * @param value New value to check against `lView[bindingIndex]`\n     * @returns `true` if the bindings has changed. (Throws if binding has changed during\n     *          `CheckNoChangesMode`)\n     */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    var details = getExpressionChangedErrorDetails(lView, bindingIndex, oldValueToCompare, value);\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, details.oldValue, details.newValue, details.propName);\n                }\n                // There was a change, but the `devModeEqual` decided that the change is exempt from an error.\n                // For this reason we exit as if no change. The early exit is needed to prevent the changed\n                // value to be written into `LView` (If we would write the new value that we would not see it\n                // as change on next CD.)\n                return false;\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementAttributeInternal(nodeIndex, name, value, tView, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, 'attr.' + name, bindingIndex);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = getBindingIndex();\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        setBindingIndex(bindingIndex);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, nextBindingIndex(), v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        incrementBindingIndex(2);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        incrementBindingIndex(3);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        incrementBindingIndex(4);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        incrementBindingIndex(5);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        incrementBindingIndex(6);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        incrementBindingIndex(7);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        incrementBindingIndex(8);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, tView, lView, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, tView, lView, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, tView, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, tView, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, tView, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, tView, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, tView, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, tView, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            var tView = getTView();\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolated, tView, lView, sanitizer, namespace);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([tView.data, nodeIndex, 'attr.' + attrName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component.\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view[TVIEW], view, component);\n    }\n    /**\n     * Marks the component as dirty (needing change detection). Marking a component dirty will\n     * schedule a change detection on it at some point in the future.\n     *\n     * Marking an already dirty component as dirty won't do anything. Only one outstanding change\n     * detection can be scheduled per component tree.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tView = getTView();\n        var tNode = containerInternal(tView, lView, index, null, null);\n        if (tView.firstCreatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    function templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        // TODO(pk): refactor getOrCreateTNode to have the \"create\" only version\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 0 /* Container */, tagName || null, getConstant(tViewConsts, attrsIndex));\n        resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        registerPostOrderHooks(tView, tNode);\n        var embeddedTView = tNode.tViews = createTView(2 /* Embedded */, -1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n        var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n        embeddedTViewNode.injectorIndex = tNode.injectorIndex;\n        embeddedTView.node = embeddedTViewNode;\n        if (tView.queries !== null) {\n            tView.queries.template(tView, tNode);\n            embeddedTView.queries = tView.queries.embeddedTView(tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrsIndex Index of template attributes in the `consts` array.\n     * @param localRefs Index of the local references in the `consts` array.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.firstCreatePass ?\n            templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, false);\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        appendChild(tView, lView, comment, tNode);\n        attachPatchData(comment, lView);\n        addToViewTree(lView, lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode));\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = getTView();\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = getLContainerActiveIndex(lContainer);\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(tView, lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(tView, lView, comment, tNode);\n        attachPatchData(comment, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(tView, lView, index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        var tNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(tNode, lView, resolveForwardRef(token), flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactory() {\n        var msg = ngDevMode ? \"This constructor was not compatible with Dependency Injection.\" : 'invalid';\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Given `<div style=\"...\" my-dir>` and `MyDir` with `@Input('style')` we need to write to\n     * directive input.\n     */\n    function setDirectiveInputsWhichShadowsStyling(tView, tNode, lView, value, isClassBased) {\n        var inputs = tNode.inputs;\n        var property = isClassBased ? 'class' : 'style';\n        // We support both 'class' and `className` hence the fallback.\n        var stylingInputs = inputs[property] || (isClassBased && inputs['className']);\n        setInputsForProperty(tView, lView, stylingInputs, property, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs);\n        var hasDirectives = resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        ngDevMode && warnAboutUnknownElement(tView, lView, native, tNode, hasDirectives);\n        if (tNode.mergedAttrs !== null) {\n            computeStaticStyling(tNode, tNode.mergedAttrs);\n        }\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = HEADER_OFFSET + index;\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var renderer = lView[RENDERER];\n        var native = lView[adjustedIndex] = elementCreate(name, renderer, getNamespace());\n        var tNode = tView.firstCreatePass ?\n            elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        var mergedAttrs = tNode.mergedAttrs;\n        if (mergedAttrs !== null) {\n            setUpAttributes(renderer, native, mergedAttrs);\n        }\n        var classes = tNode.classes;\n        if (classes !== null) {\n            writeDirectClass(renderer, native, classes);\n        }\n        var styles = tNode.styles;\n        if (styles !== null) {\n            writeDirectStyle(renderer, native, styles);\n        }\n        appendChild(tView, lView, native, tNode);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex !== null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        decreaseElementDepthCount();\n        var tView = getTView();\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (tNode.classes !== null && hasClassInput(tNode)) {\n            setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.classes, true);\n        }\n        if (tNode.styles !== null && hasStyleInput(tNode)) {\n            setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.styles, false);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrsIndex, localRefsIndex) {\n        ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n        ɵɵelementEnd();\n    }\n    function warnAboutUnknownElement(tView, lView, element, tNode, hasDirectives) {\n        var schemas = tView.schemas;\n        // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n        // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n        // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n        // execute the check below.\n        if (schemas === null)\n            return;\n        var tagName = tNode.tagName;\n        // If the element matches any directive, it's considered as valid.\n        if (!hasDirectives && tagName !== null) {\n            // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered\n            // as a custom element. Note that unknown elements with a dash in their name won't be instances\n            // of HTMLUnknownElement in browsers that support web components.\n            var isUnknown = \n            // Note that we can't check for `typeof HTMLUnknownElement === 'function'`,\n            // because while most browsers return 'function', IE returns 'object'.\n            (typeof HTMLUnknownElement !== 'undefined' && HTMLUnknownElement &&\n                element instanceof HTMLUnknownElement) ||\n                (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n                    !customElements.get(tagName));\n            if (isUnknown && !matchingSchemas(tView, lView, tagName)) {\n                var warning = \"'\" + tagName + \"' is not a known element:\\n\";\n                warning +=\n                    \"1. If '\" + tagName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (tagName && tagName.indexOf('-') > -1) {\n                    warning +=\n                        \"2. If '\" + tagName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    warning +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                console.warn(warning);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) {\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, 'ng-container', attrs);\n        // While ng-container doesn't necessarily support styling, we use the style context to identify\n        // and execute directives on the ng-container.\n        if (attrs !== null) {\n            computeStaticStyling(tNode, attrs);\n        }\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        resolveDirectives(tView, lView, tNode, localRefs);\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');\n        var tNode = tView.firstCreatePass ?\n            elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'ng-container' : '');\n        appendChild(tView, lView, native, tNode);\n        attachPatchData(native, lView);\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrsIndex, localRefsIndex) {\n        ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, getLContainerActiveIndex(lContainer), viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender[TVIEW], viewToRender, lContainer, getLContainerActiveIndex(lContainer));\n            }\n            lContainer[ACTIVE_INDEX] += 2 /* INCREMENT */;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(2 /* Embedded */, viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = getTView();\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(tView, lView, context); // creation mode pass\n        }\n        refreshView(tView, lView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView();\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tView = getTView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(tView, lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵlistener;\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var renderer = loadComponentRenderer(tNode, lView);\n        var tView = getTView();\n        listenerInternal(tView, lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵcomponentHostSyntheticListener;\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(tView, lView, eventName, tNodeIdx) {\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(tView, lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstCreatePass = tView.firstCreatePass;\n        var tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = []));\n        // When the ɵɵlistener instruction was generated and is executed we know that there is either a\n        // native listener or a directive output on this element. As such we we know that we will have to\n        // register a listener and store its cleanup function on LView.\n        var lCleanup = getLCleanup(lView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(tView, lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs !== null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                for (var i = 0; i < propsLength; i += 2) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 1];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = getLView()[DECLARATION_COMPONENT_VIEW][T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tView = getTView();\n        var tProjectionNode = getOrCreateTNode(tView, lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(tView, lView, tProjectionNode);\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, propName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, propName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, nodeIndex, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, nodeIndex, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, nodeIndex, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([tView.data, nodeIndex, propName, getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ$1 = {};\n    var EMPTY_ARRAY$3 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ$1);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY$3);\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * NOTE: The word `styling` is used interchangeably as style or class styling.\n     *\n     * This file contains code to link styling instructions together so that they can be replayed in\n     * priority order. The file exists because Ivy styling instruction execution order does not match\n     * that of the priority order. The purpose of this code is to create a linked list so that the\n     * instructions can be traversed in priority order when computing the styles.\n     *\n     * Assume we are dealing with the following code:\n     * ```\n     * @Component({\n     *   template: `\n     *     <my-cmp [style]=\" {color: '#001'} \"\n     *             [style.color]=\" #002 \"\n     *             dir-style-color-1\n     *             dir-style-color-2> `\n     * })\n     * class ExampleComponent {\n     *   static ngComp = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#001'});\n     *     ɵɵstyleProp('color', '#002');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `[dir-style-color-1]',\n     * })\n     * class Style1Directive {\n     *   @HostBinding('style') style = {color: '#005'};\n     *   @HostBinding('style.color') color = '#006';\n     *\n     *   static ngDir = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#005'});\n     *     ɵɵstyleProp('color', '#006');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `[dir-style-color-2]',\n     * })\n     * class Style2Directive {\n     *   @HostBinding('style') style = {color: '#007'};\n     *   @HostBinding('style.color') color = '#008';\n     *\n     *   static ngDir = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#007'});\n     *     ɵɵstyleProp('color', '#008');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `my-cmp',\n     * })\n     * class MyComponent {\n     *   @HostBinding('style') style = {color: '#003'};\n     *   @HostBinding('style.color') color = '#004';\n     *\n     *   static ngComp = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#003'});\n     *     ɵɵstyleProp('color', '#004');\n     *     ...\n     *   }\n     * }\n     * ```\n     *\n     * The Order of instruction execution is:\n     *\n     * NOTE: the comment binding location is for illustrative purposes only.\n     *\n     * ```\n     * // Template: (ExampleComponent)\n     *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n     *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n     * // MyComponent\n     *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n     *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n     * // Style1Directive\n     *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n     *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n     * // Style2Directive\n     *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n     *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n     * ```\n     *\n     * The correct priority order of concatenation is:\n     *\n     * ```\n     * // MyComponent\n     *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n     *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n     * // Style1Directive\n     *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n     *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n     * // Style2Directive\n     *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n     *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n     * // Template: (ExampleComponent)\n     *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n     *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n     * ```\n     *\n     * What color should be rendered?\n     *\n     * Once the items are correctly sorted in the list, the answer is simply the last item in the\n     * concatenation list which is `#002`.\n     *\n     * To do so we keep a linked list of all of the bindings which pertain to this element.\n     * Notice that the bindings are inserted in the order of execution, but the `TView.data` allows\n     * us to traverse them in the order of priority.\n     *\n     * |Idx|`TView.data`|`LView`          | Notes\n     * |---|------------|-----------------|--------------\n     * |...|            |                 |\n     * |10 |`null`      |`{color: '#001'}`| `ɵɵstyleMap('color', {color: '#001'})`\n     * |11 |`30 | 12`   | ...             |\n     * |12 |`color`     |`'#002'`         | `ɵɵstyleProp('color', '#002')`\n     * |13 |`10 | 0`    | ...             |\n     * |...|            |                 |\n     * |20 |`null`      |`{color: '#003'}`| `ɵɵstyleMap('color', {color: '#003'})`\n     * |21 |`0 | 22`    | ...             |\n     * |22 |`color`     |`'#004'`         | `ɵɵstyleProp('color', '#004')`\n     * |23 |`20 | 24`   | ...             |\n     * |24 |`null`      |`{color: '#005'}`| `ɵɵstyleMap('color', {color: '#005'})`\n     * |25 |`22 | 26`   | ...             |\n     * |26 |`color`     |`'#006'`         | `ɵɵstyleProp('color', '#006')`\n     * |27 |`24 | 28`   | ...             |\n     * |28 |`null`      |`{color: '#007'}`| `ɵɵstyleMap('color', {color: '#007'})`\n     * |29 |`26 | 30`   | ...             |\n     * |30 |`color`     |`'#008'`         | `ɵɵstyleProp('color', '#008')`\n     * |31 |`28 | 10`   | ...             |\n     *\n     * The above data structure allows us to re-concatenate the styling no matter which data binding\n     * changes.\n     *\n     * NOTE: in addition to keeping track of next/previous index the `TView.data` also stores prev/next\n     * duplicate bit. The duplicate bit if true says there either is a binding with the same name or\n     * there is a map (which may contain the name). This information is useful in knowing if other\n     * styles with higher priority need to be searched for overwrites.\n     *\n     * NOTE: See `should support example in 'tnode_linked_list.ts' documentation` in\n     * `tnode_linked_list_spec.ts` for working example.\n     */\n    var __unused_const_as_closure_does_not_like_standalone_comment_blocks__;\n    /**\n     * Insert new `tStyleValue` at `TData` and link existing style bindings such that we maintain linked\n     * list of styles and compute the duplicate flag.\n     *\n     * Note: this function is executed during `firstUpdatePass` only to populate the `TView.data`.\n     *\n     * The function works by keeping track of `tStylingRange` which contains two pointers pointing to\n     * the head/tail of the template portion of the styles.\n     *  - if `isHost === false` (we are template) then insertion is at tail of `TStylingRange`\n     *  - if `isHost === true` (we are host binding) then insertion is at head of `TStylingRange`\n     *\n     * @param tData The `TData` to insert into.\n     * @param tNode `TNode` associated with the styling element.\n     * @param tStylingKey See `TStylingKey`.\n     * @param index location of where `tStyleValue` should be stored (and linked into list.)\n     * @param isHostBinding `true` if the insertion is for a `hostBinding`. (insertion is in front of\n     *               template.)\n     * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.\n     *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)\n     */\n    function insertTStylingBinding(tData, tNode, tStylingKeyWithStatic, index, isHostBinding, isClassBinding) {\n        ngDevMode && assertFirstUpdatePass(getTView());\n        var tBindings = isClassBinding ? tNode.classBindings : tNode.styleBindings;\n        var tmplHead = getTStylingRangePrev(tBindings);\n        var tmplTail = getTStylingRangeNext(tBindings);\n        tData[index] = tStylingKeyWithStatic;\n        var isKeyDuplicateOfStatic = false;\n        var tStylingKey;\n        if (Array.isArray(tStylingKeyWithStatic)) {\n            // We are case when the `TStylingKey` contains static fields as well.\n            var staticKeyValueArray = tStylingKeyWithStatic;\n            tStylingKey = staticKeyValueArray[1]; // unwrap.\n            // We need to check if our key is present in the static so that we can mark it as duplicate.\n            if (tStylingKey === null ||\n                keyValueArrayIndexOf(staticKeyValueArray, tStylingKey) > 0) {\n                // tStylingKey is present in the statics, need to mark it as duplicate.\n                isKeyDuplicateOfStatic = true;\n            }\n        }\n        else {\n            tStylingKey = tStylingKeyWithStatic;\n        }\n        if (isHostBinding) {\n            // We are inserting host bindings\n            // If we don't have template bindings then `tail` is 0.\n            var hasTemplateBindings = tmplTail !== 0;\n            // This is important to know because that means that the `head` can't point to the first\n            // template bindings (there are none.) Instead the head points to the tail of the template.\n            if (hasTemplateBindings) {\n                // template head's \"prev\" will point to last host binding or to 0 if no host bindings yet\n                var previousNode = getTStylingRangePrev(tData[tmplHead + 1]);\n                tData[index + 1] = toTStylingRange(previousNode, tmplHead);\n                // if a host binding has already been registered, we need to update the next of that host\n                // binding to point to this one\n                if (previousNode !== 0) {\n                    // We need to update the template-tail value to point to us.\n                    tData[previousNode + 1] =\n                        setTStylingRangeNext(tData[previousNode + 1], index);\n                }\n                // The \"previous\" of the template binding head should point to this host binding\n                tData[tmplHead + 1] = setTStylingRangePrev(tData[tmplHead + 1], index);\n            }\n            else {\n                tData[index + 1] = toTStylingRange(tmplHead, 0);\n                // if a host binding has already been registered, we need to update the next of that host\n                // binding to point to this one\n                if (tmplHead !== 0) {\n                    // We need to update the template-tail value to point to us.\n                    tData[tmplHead + 1] = setTStylingRangeNext(tData[tmplHead + 1], index);\n                }\n                // if we don't have template, the head points to template-tail, and needs to be advanced.\n                tmplHead = index;\n            }\n        }\n        else {\n            // We are inserting in template section.\n            // We need to set this binding's \"previous\" to the current template tail\n            tData[index + 1] = toTStylingRange(tmplTail, 0);\n            ngDevMode && assertEqual(tmplHead !== 0 && tmplTail === 0, false, 'Adding template bindings after hostBindings is not allowed.');\n            if (tmplHead === 0) {\n                tmplHead = index;\n            }\n            else {\n                // We need to update the previous value \"next\" to point to this binding\n                tData[tmplTail + 1] = setTStylingRangeNext(tData[tmplTail + 1], index);\n            }\n            tmplTail = index;\n        }\n        // Now we need to update / compute the duplicates.\n        // Starting with our location search towards head (least priority)\n        if (isKeyDuplicateOfStatic) {\n            tData[index + 1] = setTStylingRangePrevDuplicate(tData[index + 1]);\n        }\n        markDuplicates(tData, tStylingKey, index, true, isClassBinding);\n        markDuplicates(tData, tStylingKey, index, false, isClassBinding);\n        markDuplicateOfResidualStyling(tNode, tStylingKey, tData, index, isClassBinding);\n        tBindings = toTStylingRange(tmplHead, tmplTail);\n        if (isClassBinding) {\n            tNode.classBindings = tBindings;\n        }\n        else {\n            tNode.styleBindings = tBindings;\n        }\n    }\n    /**\n     * Look into the residual styling to see if the current `tStylingKey` is duplicate of residual.\n     *\n     * @param tNode `TNode` where the residual is stored.\n     * @param tStylingKey `TStylingKey` to store.\n     * @param tData `TData` associated with the current `LView`.\n     * @param index location of where `tStyleValue` should be stored (and linked into list.)\n     * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.\n     *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)\n     */\n    function markDuplicateOfResidualStyling(tNode, tStylingKey, tData, index, isClassBinding) {\n        var residual = isClassBinding ? tNode.residualClasses : tNode.residualStyles;\n        if (residual != null /* or undefined */ && typeof tStylingKey == 'string' &&\n            keyValueArrayIndexOf(residual, tStylingKey) >= 0) {\n            // We have duplicate in the residual so mark ourselves as duplicate.\n            tData[index + 1] = setTStylingRangeNextDuplicate(tData[index + 1]);\n        }\n    }\n    /**\n     * Marks `TStyleValue`s as duplicates if another style binding in the list has the same\n     * `TStyleValue`.\n     *\n     * NOTE: this function is intended to be called twice once with `isPrevDir` set to `true` and once\n     * with it set to `false` to search both the previous as well as next items in the list.\n     *\n     * No duplicate case\n     * ```\n     *   [style.color]\n     *   [style.width.px] <<- index\n     *   [style.height.px]\n     * ```\n     *\n     * In the above case adding `[style.width.px]` to the existing `[style.color]` produces no\n     * duplicates because `width` is not found in any other part of the linked list.\n     *\n     * Duplicate case\n     * ```\n     *   [style.color]\n     *   [style.width.em]\n     *   [style.width.px] <<- index\n     * ```\n     * In the above case adding `[style.width.px]` will produce a duplicate with `[style.width.em]`\n     * because `width` is found in the chain.\n     *\n     * Map case 1\n     * ```\n     *   [style.width.px]\n     *   [style.color]\n     *   [style]  <<- index\n     * ```\n     * In the above case adding `[style]` will produce a duplicate with any other bindings because\n     * `[style]` is a Map and as such is fully dynamic and could produce `color` or `width`.\n     *\n     * Map case 2\n     * ```\n     *   [style]\n     *   [style.width.px]\n     *   [style.color]  <<- index\n     * ```\n     * In the above case adding `[style.color]` will produce a duplicate because there is already a\n     * `[style]` binding which is a Map and as such is fully dynamic and could produce `color` or\n     * `width`.\n     *\n     * NOTE: Once `[style]` (Map) is added into the system all things are mapped as duplicates.\n     * NOTE: We use `style` as example, but same logic is applied to `class`es as well.\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tStylingKey `TStylingKeyPrimitive` which contains the value to compare to other keys in\n     *        the linked list.\n     * @param index Starting location in the linked list to search from\n     * @param isPrevDir Direction.\n     *        - `true` for previous (lower priority);\n     *        - `false` for next (higher priority).\n     */\n    function markDuplicates(tData, tStylingKey, index, isPrevDir, isClassBinding) {\n        var tStylingAtIndex = tData[index + 1];\n        var isMap = tStylingKey === null;\n        var cursor = isPrevDir ? getTStylingRangePrev(tStylingAtIndex) : getTStylingRangeNext(tStylingAtIndex);\n        var foundDuplicate = false;\n        // We keep iterating as long as we have a cursor\n        // AND either:\n        // - we found what we are looking for, OR\n        // - we are a map in which case we have to continue searching even after we find what we were\n        //   looking for since we are a wild card and everything needs to be flipped to duplicate.\n        while (cursor !== 0 && (foundDuplicate === false || isMap)) {\n            ngDevMode && assertDataInRange(tData, cursor);\n            var tStylingValueAtCursor = tData[cursor];\n            var tStyleRangeAtCursor = tData[cursor + 1];\n            if (isStylingMatch(tStylingValueAtCursor, tStylingKey)) {\n                foundDuplicate = true;\n                tData[cursor + 1] = isPrevDir ? setTStylingRangeNextDuplicate(tStyleRangeAtCursor) :\n                    setTStylingRangePrevDuplicate(tStyleRangeAtCursor);\n            }\n            cursor = isPrevDir ? getTStylingRangePrev(tStyleRangeAtCursor) :\n                getTStylingRangeNext(tStyleRangeAtCursor);\n        }\n        if (foundDuplicate) {\n            // if we found a duplicate, than mark ourselves.\n            tData[index + 1] = isPrevDir ? setTStylingRangePrevDuplicate(tStylingAtIndex) :\n                setTStylingRangeNextDuplicate(tStylingAtIndex);\n        }\n    }\n    /**\n     * Determines if two `TStylingKey`s are a match.\n     *\n     * When computing weather a binding contains a duplicate, we need to compare if the instruction\n     * `TStylingKey` has a match.\n     *\n     * Here are examples of `TStylingKey`s which match given `tStylingKeyCursor` is:\n     * - `color`\n     *    - `color`    // Match another color\n     *    - `null`     // That means that `tStylingKey` is a `classMap`/`styleMap` instruction\n     *    - `['', 'color', 'other', true]` // wrapped `color` so match\n     *    - `['', null, 'other', true]`       // wrapped `null` so match\n     *    - `['', 'width', 'color', 'value']` // wrapped static value contains a match on `'color'`\n     * - `null`       // `tStylingKeyCursor` always match as it is `classMap`/`styleMap` instruction\n     *\n     * @param tStylingKeyCursor\n     * @param tStylingKey\n     */\n    function isStylingMatch(tStylingKeyCursor, tStylingKey) {\n        ngDevMode &&\n            assertNotEqual(Array.isArray(tStylingKey), true, 'Expected that \\'tStylingKey\\' has been unwrapped');\n        if (tStylingKeyCursor === null || // If the cursor is `null` it means that we have map at that\n            // location so we must assume that we have a match.\n            tStylingKey == null || // If `tStylingKey` is `null` then it is a map therefor assume that it\n            // contains a match.\n            (Array.isArray(tStylingKeyCursor) ? tStylingKeyCursor[1] : tStylingKeyCursor) ===\n                tStylingKey // If the keys match explicitly than we are a match.\n        ) {\n            return true;\n        }\n        else if (Array.isArray(tStylingKeyCursor) && typeof tStylingKey === 'string') {\n            // if we did not find a match, but `tStylingKeyCursor` is `KeyValueArray` that means cursor has\n            // statics and we need to check those as well.\n            return keyValueArrayIndexOf(tStylingKeyCursor, tStylingKey) >=\n                0; // see if we are matching the key\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Global state of the parser. (This makes parser non-reentrant, but that is not an issue)\n    var parserState = {\n        textEnd: 0,\n        key: 0,\n        keyEnd: 0,\n        value: 0,\n        valueEnd: 0,\n    };\n    /**\n     * Retrieves the last parsed `key` of style.\n     * @param text the text to substring the key from.\n     */\n    function getLastParsedKey(text) {\n        return text.substring(parserState.key, parserState.keyEnd);\n    }\n    /**\n     * Retrieves the last parsed `value` of style.\n     * @param text the text to substring the key from.\n     */\n    function getLastParsedValue(text) {\n        return text.substring(parserState.value, parserState.valueEnd);\n    }\n    /**\n     * Initializes `className` string for parsing and parses the first token.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n     *   const key = getLastParsedKey();\n     *   ...\n     * }\n     * ```\n     * @param text `className` to parse\n     * @returns index where the next invocation of `parseClassNameNext` should resume.\n     */\n    function parseClassName(text) {\n        resetParserState(text);\n        return parseClassNameNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n    }\n    /**\n     * Parses next `className` token.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n     *   const key = getLastParsedKey();\n     *   ...\n     * }\n     * ```\n     *\n     * @param text `className` to parse\n     * @param index where the parsing should resume.\n     * @returns index where the next invocation of `parseClassNameNext` should resume.\n     */\n    function parseClassNameNext(text, index) {\n        var end = parserState.textEnd;\n        if (end === index) {\n            return -1;\n        }\n        index = parserState.keyEnd = consumeClassToken(text, parserState.key = index, end);\n        return consumeWhitespace(text, index, end);\n    }\n    /**\n     * Initializes `cssText` string for parsing and parses the first key/values.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n     *   const key = getLastParsedKey();\n     *   const value = getLastParsedValue();\n     *   ...\n     * }\n     * ```\n     * @param text `cssText` to parse\n     * @returns index where the next invocation of `parseStyleNext` should resume.\n     */\n    function parseStyle(text) {\n        resetParserState(text);\n        return parseStyleNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n    }\n    /**\n     * Parses the next `cssText` key/values.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n     *   const key = getLastParsedKey();\n     *   const value = getLastParsedValue();\n     *   ...\n     * }\n     *\n     * @param text `cssText` to parse\n     * @param index where the parsing should resume.\n     * @returns index where the next invocation of `parseStyleNext` should resume.\n     */\n    function parseStyleNext(text, startIndex) {\n        var end = parserState.textEnd;\n        var index = parserState.key = consumeWhitespace(text, startIndex, end);\n        if (end === index) {\n            // we reached an end so just quit\n            return -1;\n        }\n        index = parserState.keyEnd = consumeStyleKey(text, index, end);\n        index = consumeSeparator(text, index, end, 58 /* COLON */);\n        index = parserState.value = consumeWhitespace(text, index, end);\n        index = parserState.valueEnd = consumeStyleValue(text, index, end);\n        return consumeSeparator(text, index, end, 59 /* SEMI_COLON */);\n    }\n    /**\n     * Reset the global state of the styling parser.\n     * @param text The styling text to parse.\n     */\n    function resetParserState(text) {\n        parserState.key = 0;\n        parserState.keyEnd = 0;\n        parserState.value = 0;\n        parserState.valueEnd = 0;\n        parserState.textEnd = text.length;\n    }\n    /**\n     * Returns index of next non-whitespace character.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index of next non-whitespace character (May be the same as `start` if no whitespace at\n     *          that location.)\n     */\n    function consumeWhitespace(text, startIndex, endIndex) {\n        while (startIndex < endIndex && text.charCodeAt(startIndex) <= 32 /* SPACE */) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Returns index of last char in class token.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last char in class token.\n     */\n    function consumeClassToken(text, startIndex, endIndex) {\n        while (startIndex < endIndex && text.charCodeAt(startIndex) > 32 /* SPACE */) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes all of the characters belonging to style key and token.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last style key character.\n     */\n    function consumeStyleKey(text, startIndex, endIndex) {\n        var ch;\n        while (startIndex < endIndex &&\n            ((ch = text.charCodeAt(startIndex)) === 45 /* DASH */ || ch === 95 /* UNDERSCORE */ ||\n                ((ch & -33 /* UPPER_CASE */) >= 65 /* A */ && (ch & -33 /* UPPER_CASE */) <= 90 /* Z */))) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes all whitespace and the separator `:` after the style key.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after separator and surrounding whitespace.\n     */\n    function consumeSeparator(text, startIndex, endIndex, separator) {\n        startIndex = consumeWhitespace(text, startIndex, endIndex);\n        if (startIndex < endIndex) {\n            if (ngDevMode && text.charCodeAt(startIndex) !== separator) {\n                malformedStyleError(text, String.fromCharCode(separator), startIndex);\n            }\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes style value honoring `url()` and `\"\"` text.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last style value character.\n    */\n    function consumeStyleValue(text, startIndex, endIndex) {\n        var ch1 = -1; // 1st previous character\n        var ch2 = -1; // 2nd previous character\n        var ch3 = -1; // 3rd previous character\n        var i = startIndex;\n        var lastChIndex = i;\n        while (i < endIndex) {\n            var ch = text.charCodeAt(i++);\n            if (ch === 59 /* SEMI_COLON */) {\n                return lastChIndex;\n            }\n            else if (ch === 34 /* DOUBLE_QUOTE */ || ch === 39 /* SINGLE_QUOTE */) {\n                lastChIndex = i = consumeQuotedText(text, ch, i, endIndex);\n            }\n            else if (startIndex ===\n                i - 4 && // We have seen only 4 characters so far \"URL(\" (Ignore \"foo_URL()\")\n                ch3 === 85 /* U */ &&\n                ch2 === 82 /* R */ && ch1 === 76 /* L */ && ch === 40 /* OPEN_PAREN */) {\n                lastChIndex = i = consumeQuotedText(text, 41 /* CLOSE_PAREN */, i, endIndex);\n            }\n            else if (ch > 32 /* SPACE */) {\n                // if we have a non-whitespace character then capture its location\n                lastChIndex = i;\n            }\n            ch3 = ch2;\n            ch2 = ch1;\n            ch1 = ch & -33 /* UPPER_CASE */;\n        }\n        return lastChIndex;\n    }\n    /**\n     * Consumes all of the quoted characters.\n     *\n     * @param text Text to scan\n     * @param quoteCharCode CharCode of either `\"` or `'` quote or `)` for `url(...)`.\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after quoted characters.\n     */\n    function consumeQuotedText(text, quoteCharCode, startIndex, endIndex) {\n        var ch1 = -1; // 1st previous character\n        var index = startIndex;\n        while (index < endIndex) {\n            var ch = text.charCodeAt(index++);\n            if (ch == quoteCharCode && ch1 !== 92 /* BACK_SLASH */) {\n                return index;\n            }\n            if (ch == 92 /* BACK_SLASH */ && ch1 === 92 /* BACK_SLASH */) {\n                // two back slashes cancel each other out. For example `\"\\\\\"` should properly end the\n                // quotation. (It should not assume that the last `\"` is escaped.)\n                ch1 = 0;\n            }\n            else {\n                ch1 = ch;\n            }\n        }\n        throw ngDevMode ? malformedStyleError(text, String.fromCharCode(quoteCharCode), endIndex) :\n            new Error();\n    }\n    function malformedStyleError(text, expecting, index) {\n        ngDevMode && assertEqual(typeof text === 'string', true, 'String expected here');\n        throw throwError(\"Malformed style at location \" + index + \" in string '\" + text.substring(0, index) + '[>>' +\n            text.substring(index, index + 1) + '<<]' + text.substr(index + 1) +\n            (\"'. Expecting '\" + expecting + \"'.\"));\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        checkStylingProperty(prop, value, suffix, false);\n        return ɵɵstyleProp;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        checkStylingProperty(className, value, null, true);\n        return ɵɵclassProp;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        checkStylingMap(styleKeyValueArraySet, styleStringParser, styles, false);\n    }\n    /**\n     * Parse text as style and add values to KeyValueArray.\n     *\n     * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n     * needed. It is only referenced from `ɵɵstyleMap`.\n     *\n     * @param keyValueArray KeyValueArray to add parsed values to.\n     * @param text text to parse.\n     */\n    function styleStringParser(keyValueArray, text) {\n        for (var i = parseStyle(text); i >= 0; i = parseStyleNext(text, i)) {\n            styleKeyValueArraySet(keyValueArray, getLastParsedKey(text), getLastParsedValue(text));\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        checkStylingMap(keyValueArraySet, classStringParser, classes, true);\n    }\n    /**\n     * Parse text as class and add values to KeyValueArray.\n     *\n     * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n     * needed. It is only referenced from `ɵɵclassMap`.\n     *\n     * @param keyValueArray KeyValueArray to add parsed values to.\n     * @param text text to parse.\n     */\n    function classStringParser(keyValueArray, text) {\n        for (var i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n            keyValueArraySet(keyValueArray, getLastParsedKey(text), true);\n        }\n    }\n    /**\n     * Common code between `ɵɵclassProp` and `ɵɵstyleProp`.\n     *\n     * @param prop property name.\n     * @param value binding value.\n     * @param suffixOrSanitizer suffix or sanitization function\n     * @param isClassBased `true` if `class` change (`false` if `style`)\n     */\n    function checkStylingProperty(prop, value, suffixOrSanitizer, isClassBased) {\n        var lView = getLView();\n        var tView = getTView();\n        // Styling instructions use 2 slots per binding.\n        // 1. one for the value / TStylingKey\n        // 2. one for the intermittent-value / TStylingRange\n        var bindingIndex = incrementBindingIndex(2);\n        if (tView.firstUpdatePass) {\n            stylingFirstUpdatePass(tView, prop, bindingIndex, isClassBased);\n        }\n        if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n            // This is a work around. Once PR#34480 lands the sanitizer is passed explicitly and this line\n            // can be removed.\n            var styleSanitizer = void 0;\n            if (suffixOrSanitizer == null) {\n                if (styleSanitizer = getCurrentStyleSanitizer()) {\n                    suffixOrSanitizer = styleSanitizer;\n                }\n            }\n            var tNode = tView.data[getSelectedIndex() + HEADER_OFFSET];\n            updateStyling(tView, tNode, lView, lView[RENDERER], prop, lView[bindingIndex + 1] = normalizeAndApplySuffixOrSanitizer(value, suffixOrSanitizer), isClassBased, bindingIndex);\n        }\n    }\n    /**\n     * Common code between `ɵɵclassMap` and `ɵɵstyleMap`.\n     *\n     * @param keyValueArraySet (See `keyValueArraySet` in \"util/array_utils\") Gets passed in as a\n     * function so that\n     *        `style` can pass in version which does sanitization. This is done for tree shaking\n     *        purposes.\n     * @param stringParser Parser used to parse `value` if `string`. (Passed in as `style` and `class`\n     *        have different parsers.)\n     * @param value bound value from application\n     * @param isClassBased `true` if `class` change (`false` if `style`)\n     */\n    function checkStylingMap(keyValueArraySet, stringParser, value, isClassBased) {\n        var tView = getTView();\n        var bindingIndex = incrementBindingIndex(2);\n        if (tView.firstUpdatePass) {\n            stylingFirstUpdatePass(tView, null, bindingIndex, isClassBased);\n        }\n        var lView = getLView();\n        if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n            // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n            // if so as not to read unnecessarily.\n            var tNode = tView.data[getSelectedIndex() + HEADER_OFFSET];\n            if (hasStylingInputShadow(tNode, isClassBased) && !isInHostBindings(tView, bindingIndex)) {\n                if (ngDevMode) {\n                    // verify that if we are shadowing then `TData` is appropriately marked so that we skip\n                    // processing this binding in styling resolution.\n                    var tStylingKey = tView.data[bindingIndex];\n                    assertEqual(Array.isArray(tStylingKey) ? tStylingKey[1] : tStylingKey, false, 'Styling linked list shadow input should be marked as \\'false\\'');\n                }\n                // VE does not concatenate the static portion like we are doing here.\n                // Instead VE just ignores the static completely if dynamic binding is present.\n                // Because of locality we have already set the static portion because we don't know if there\n                // is a dynamic portion until later. If we would ignore the static portion it would look like\n                // the binding has removed it. This would confuse `[ngStyle]`/`[ngClass]` to do the wrong\n                // thing as it would think that the static portion was removed. For this reason we\n                // concatenate it so that `[ngStyle]`/`[ngClass]`  can continue to work on changed.\n                var staticPrefix = isClassBased ? tNode.classes : tNode.styles;\n                ngDevMode && isClassBased === false && staticPrefix !== null &&\n                    assertEqual(staticPrefix.endsWith(';'), true, 'Expecting static portion to end with \\';\\'');\n                if (staticPrefix !== null) {\n                    // We want to make sure that falsy values of `value` become empty strings.\n                    value = concatStringsWithSpace(staticPrefix, value ? value : '');\n                }\n                // Given `<div [style] my-dir>` such that `my-dir` has `@Input('style')`.\n                // This takes over the `[style]` binding. (Same for `[class]`)\n                setDirectiveInputsWhichShadowsStyling(tView, tNode, lView, value, isClassBased);\n            }\n            else {\n                updateStylingMap(tView, tNode, lView, lView[RENDERER], lView[bindingIndex + 1], lView[bindingIndex + 1] = toStylingKeyValueArray(keyValueArraySet, stringParser, value), isClassBased, bindingIndex);\n            }\n        }\n    }\n    /**\n     * Determines when the binding is in `hostBindings` section\n     *\n     * @param tView Current `TView`\n     * @param bindingIndex index of binding which we would like if it is in `hostBindings`\n     */\n    function isInHostBindings(tView, bindingIndex) {\n        // All host bindings are placed after the expando section.\n        return bindingIndex >= tView.expandoStartIndex;\n    }\n    /**\n    * Collects the necessary information to insert the binding into a linked list of style bindings\n    * using `insertTStylingBinding`.\n    *\n    * @param tView `TView` where the binding linked list will be stored.\n    * @param tStylingKey Property/key of the binding.\n    * @param bindingIndex Index of binding associated with the `prop`\n    * @param isClassBased `true` if `class` change (`false` if `style`)\n    */\n    function stylingFirstUpdatePass(tView, tStylingKey, bindingIndex, isClassBased) {\n        ngDevMode && assertFirstUpdatePass(tView);\n        var tData = tView.data;\n        if (tData[bindingIndex + 1] === null) {\n            // The above check is necessary because we don't clear first update pass until first successful\n            // (no exception) template execution. This prevents the styling instruction from double adding\n            // itself to the list.\n            // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n            // if so as not to read unnecessarily.\n            var tNode = tData[getSelectedIndex() + HEADER_OFFSET];\n            var isHostBindings = isInHostBindings(tView, bindingIndex);\n            if (hasStylingInputShadow(tNode, isClassBased) && tStylingKey === null && !isHostBindings) {\n                // `tStylingKey === null` implies that we are either `[style]` or `[class]` binding.\n                // If there is a directive which uses `@Input('style')` or `@Input('class')` than\n                // we need to neutralize this binding since that directive is shadowing it.\n                // We turn this into a noop by setting the key to `false`\n                tStylingKey = false;\n            }\n            tStylingKey = wrapInStaticStylingKey(tData, tNode, tStylingKey, isClassBased);\n            insertTStylingBinding(tData, tNode, tStylingKey, bindingIndex, isHostBindings, isClassBased);\n        }\n    }\n    /**\n     * Adds static styling information to the binding if applicable.\n     *\n     * The linked list of styles not only stores the list and keys, but also stores static styling\n     * information on some of the keys. This function determines if the key should contain the styling\n     * information and computes it.\n     *\n     * See `TStylingStatic` for more details.\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param stylingKey `TStylingKeyPrimitive` which may need to be wrapped into `TStylingKey`\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function wrapInStaticStylingKey(tData, tNode, stylingKey, isClassBased) {\n        var hostDirectiveDef = getHostDirectiveDef(tData);\n        var residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;\n        if (hostDirectiveDef === null) {\n            // We are in template node.\n            // If template node already had styling instruction then it has already collected the static\n            // styling and there is no need to collect them again. We know that we are the first styling\n            // instruction because the `TNode.*Bindings` points to 0 (nothing has been inserted yet).\n            var isFirstStylingInstructionInTemplate = (isClassBased ? tNode.classBindings : tNode.styleBindings) === 0;\n            if (isFirstStylingInstructionInTemplate) {\n                // It would be nice to be able to get the statics from `mergeAttrs`, however, at this point\n                // they are already merged and it would not be possible to figure which property belongs where\n                // in the priority.\n                stylingKey = collectStylingFromDirectives(null, tData, tNode, stylingKey, isClassBased);\n                stylingKey = collectStylingFromTAttrs(stylingKey, tNode.attrs, isClassBased);\n                // We know that if we have styling binding in template we can't have residual.\n                residual = null;\n            }\n        }\n        else {\n            // We are in host binding node and there was no binding instruction in template node.\n            // This means that we need to compute the residual.\n            var directiveStylingLast = tNode.directiveStylingLast;\n            var isFirstStylingInstructionInHostBinding = directiveStylingLast === -1 || tData[directiveStylingLast] !== hostDirectiveDef;\n            if (isFirstStylingInstructionInHostBinding) {\n                stylingKey =\n                    collectStylingFromDirectives(hostDirectiveDef, tData, tNode, stylingKey, isClassBased);\n                if (residual === null) {\n                    // - If `null` than either:\n                    //    - Template styling instruction already ran and it has consumed the static\n                    //      styling into its `TStylingKey` and so there is no need to update residual. Instead\n                    //      we need to update the `TStylingKey` associated with the first template node\n                    //      instruction. OR\n                    //    - Some other styling instruction ran and determined that there are no residuals\n                    var templateStylingKey = getTemplateHeadTStylingKey(tData, tNode, isClassBased);\n                    if (templateStylingKey !== undefined && Array.isArray(templateStylingKey)) {\n                        // Only recompute if `templateStylingKey` had static values. (If no static value found\n                        // then there is nothing to do since this operation can only produce less static keys, not\n                        // more.)\n                        templateStylingKey = collectStylingFromDirectives(null, tData, tNode, templateStylingKey[1] /* unwrap previous statics */, isClassBased);\n                        templateStylingKey =\n                            collectStylingFromTAttrs(templateStylingKey, tNode.attrs, isClassBased);\n                        setTemplateHeadTStylingKey(tData, tNode, isClassBased, templateStylingKey);\n                    }\n                }\n                else {\n                    // We only need to recompute residual if it is not `null`.\n                    // - If existing residual (implies there was no template styling). This means that some of\n                    //   the statics may have moved from the residual to the `stylingKey` and so we have to\n                    //   recompute.\n                    // - If `undefined` this is the first time we are running.\n                    residual = collectResidual(tData, tNode, isClassBased);\n                }\n            }\n        }\n        if (residual !== undefined) {\n            isClassBased ? (tNode.residualClasses = residual) : (tNode.residualStyles = residual);\n        }\n        return stylingKey;\n    }\n    /**\n     * Retrieve the `TStylingKey` for the template styling instruction.\n     *\n     * This is needed since `hostBinding` styling instructions are inserted after the template\n     * instruction. While the template instruction needs to update the residual in `TNode` the\n     * `hostBinding` instructions need to update the `TStylingKey` of the template instruction because\n     * the template instruction is downstream from the `hostBindings` instructions.\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @return `TStylingKey` if found or `undefined` if not found.\n     */\n    function getTemplateHeadTStylingKey(tData, tNode, isClassBased) {\n        var bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;\n        if (getTStylingRangeNext(bindings) === 0) {\n            // There does not seem to be a styling instruction in the `template`.\n            return undefined;\n        }\n        return tData[getTStylingRangePrev(bindings)];\n    }\n    /**\n     * Update the `TStylingKey` of the first template instruction in `TNode`.\n     *\n     * Logically `hostBindings` styling instructions are of lower priority than that of the template.\n     * However, they execute after the template styling instructions. This means that they get inserted\n     * in front of the template styling instructions.\n     *\n     * If we have a template styling instruction and a new `hostBindings` styling instruction is\n     * executed it means that it may need to steal static fields from the template instruction. This\n     * method allows us to update the first template instruction `TStylingKey` with a new value.\n     *\n     * Assume:\n     * ```\n     * <div my-dir style=\"color: red\" [style.color]=\"tmplExp\"></div>\n     *\n     * @Directive({\n     *   host: {\n     *     'style': 'width: 100px',\n     *     '[style.color]': 'dirExp',\n     *   }\n     * })\n     * class MyDir {}\n     * ```\n     *\n     * when `[style.color]=\"tmplExp\"` executes it creates this data structure.\n     * ```\n     *  ['', 'color', 'color', 'red', 'width', '100px'],\n     * ```\n     *\n     * The reason for this is that the template instruction does not know if there are styling\n     * instructions and must assume that there are none and must collect all of the static styling.\n     * (both\n     * `color' and 'width`)\n     *\n     * When `'[style.color]': 'dirExp',` executes we need to insert a new data into the linked list.\n     * ```\n     *  ['', 'color', 'width', '100px'],  // newly inserted\n     *  ['', 'color', 'color', 'red', 'width', '100px'], // this is wrong\n     * ```\n     *\n     * Notice that the template statics is now wrong as it incorrectly contains `width` so we need to\n     * update it like so:\n     * ```\n     *  ['', 'color', 'width', '100px'],\n     *  ['', 'color', 'color', 'red'],    // UPDATE\n     * ```\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @param tStylingKey New `TStylingKey` which is replacing the old one.\n     */\n    function setTemplateHeadTStylingKey(tData, tNode, isClassBased, tStylingKey) {\n        var bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;\n        ngDevMode && assertNotEqual(getTStylingRangeNext(bindings), 0, 'Expecting to have at least one template styling binding.');\n        tData[getTStylingRangePrev(bindings)] = tStylingKey;\n    }\n    /**\n     * Collect all static values after the current `TNode.directiveStylingLast` index.\n     *\n     * Collect the remaining styling information which has not yet been collected by an existing\n     * styling instruction.\n     *\n     * @param tData `TData` where the `DirectiveDefs` are stored.\n     * @param tNode `TNode` which contains the directive range.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function collectResidual(tData, tNode, isClassBased) {\n        var residual = undefined;\n        var directiveEnd = tNode.directiveEnd;\n        ngDevMode &&\n            assertNotEqual(tNode.directiveStylingLast, -1, 'By the time this function gets called at least one hostBindings-node styling instruction must have executed.');\n        // We add `1 + tNode.directiveStart` because we need to skip the current directive (as we are\n        // collecting things after the last `hostBindings` directive which had a styling instruction.)\n        for (var i = 1 + tNode.directiveStylingLast; i < directiveEnd; i++) {\n            var attrs = tData[i].hostAttrs;\n            residual = collectStylingFromTAttrs(residual, attrs, isClassBased);\n        }\n        return collectStylingFromTAttrs(residual, tNode.attrs, isClassBased);\n    }\n    /**\n     * Collect the static styling information with lower priority than `hostDirectiveDef`.\n     *\n     * (This is opposite of residual styling.)\n     *\n     * @param hostDirectiveDef `DirectiveDef` for which we want to collect lower priority static\n     *        styling. (Or `null` if template styling)\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param stylingKey Existing `TStylingKey` to update or wrap.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function collectStylingFromDirectives(hostDirectiveDef, tData, tNode, stylingKey, isClassBased) {\n        // We need to loop because there can be directives which have `hostAttrs` but don't have\n        // `hostBindings` so this loop catches up to the current directive..\n        var currentDirective = null;\n        var directiveEnd = tNode.directiveEnd;\n        var directiveStylingLast = tNode.directiveStylingLast;\n        if (directiveStylingLast === -1) {\n            directiveStylingLast = tNode.directiveStart;\n        }\n        else {\n            directiveStylingLast++;\n        }\n        while (directiveStylingLast < directiveEnd) {\n            currentDirective = tData[directiveStylingLast];\n            ngDevMode && assertDefined(currentDirective, 'expected to be defined');\n            stylingKey = collectStylingFromTAttrs(stylingKey, currentDirective.hostAttrs, isClassBased);\n            if (currentDirective === hostDirectiveDef)\n                break;\n            directiveStylingLast++;\n        }\n        if (hostDirectiveDef !== null) {\n            // we only advance the styling cursor if we are collecting data from host bindings.\n            // Template executes before host bindings and so if we would update the index,\n            // host bindings would not get their statics.\n            tNode.directiveStylingLast = directiveStylingLast;\n        }\n        return stylingKey;\n    }\n    /**\n     * Convert `TAttrs` into `TStylingStatic`.\n     *\n     * @param stylingKey existing `TStylingKey` to update or wrap.\n     * @param attrs `TAttributes` to process.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function collectStylingFromTAttrs(stylingKey, attrs, isClassBased) {\n        var desiredMarker = isClassBased ? 1 /* Classes */ : 2 /* Styles */;\n        var currentMarker = -1 /* ImplicitAttributes */;\n        if (attrs !== null) {\n            for (var i = 0; i < attrs.length; i++) {\n                var item = attrs[i];\n                if (typeof item === 'number') {\n                    currentMarker = item;\n                }\n                else {\n                    if (currentMarker === desiredMarker) {\n                        if (!Array.isArray(stylingKey)) {\n                            stylingKey = stylingKey === undefined ? [] : ['', stylingKey];\n                        }\n                        keyValueArraySet(stylingKey, item, isClassBased ? true : attrs[++i]);\n                    }\n                }\n            }\n        }\n        return stylingKey === undefined ? null : stylingKey;\n    }\n    /**\n     * Retrieve the current `DirectiveDef` which is active when `hostBindings` style instruction is\n     * being executed (or `null` if we are in `template`.)\n     *\n     * @param tData Current `TData` where the `DirectiveDef` will be looked up at.\n     */\n    function getHostDirectiveDef(tData) {\n        var currentDirectiveIndex = getCurrentDirectiveIndex();\n        return currentDirectiveIndex === -1 ? null : tData[currentDirectiveIndex];\n    }\n    /**\n     * Convert user input to `KeyValueArray`.\n     *\n     * This function takes user input which could be `string`, Object literal, or iterable and converts\n     * it into a consistent representation. The output of this is `KeyValueArray` (which is an array\n     * where\n     * even indexes contain keys and odd indexes contain values for those keys).\n     *\n     * The advantage of converting to `KeyValueArray` is that we can perform diff in an input\n     * independent\n     * way.\n     * (ie we can compare `foo bar` to `['bar', 'baz'] and determine a set of changes which need to be\n     * applied)\n     *\n     * The fact that `KeyValueArray` is sorted is very important because it allows us to compute the\n     * difference in linear fashion without the need to allocate any additional data.\n     *\n     * For example if we kept this as a `Map` we would have to iterate over previous `Map` to determine\n     * which values need to be deleted, over the new `Map` to determine additions, and we would have to\n     * keep additional `Map` to keep track of duplicates or items which have not yet been visited.\n     *\n     * @param keyValueArraySet (See `keyValueArraySet` in \"util/array_utils\") Gets passed in as a\n     * function so that\n     *        `style` can pass in version which does sanitization. This is done for tree shaking\n     *        purposes.\n     * @param stringParser The parser is passed in so that it will be tree shakable. See\n     *        `styleStringParser` and `classStringParser`\n     * @param value The value to parse/convert to `KeyValueArray`\n     */\n    function toStylingKeyValueArray(keyValueArraySet, stringParser, value) {\n        if (value == null /*|| value === undefined */ || value === '')\n            return EMPTY_ARRAY$3;\n        var styleKeyValueArray = [];\n        var unwrappedValue = unwrapSafeValue(value);\n        if (Array.isArray(unwrappedValue)) {\n            for (var i = 0; i < unwrappedValue.length; i++) {\n                keyValueArraySet(styleKeyValueArray, unwrappedValue[i], true);\n            }\n        }\n        else if (typeof unwrappedValue === 'object') {\n            for (var key in unwrappedValue) {\n                if (unwrappedValue.hasOwnProperty(key)) {\n                    keyValueArraySet(styleKeyValueArray, key, unwrappedValue[key]);\n                }\n            }\n        }\n        else if (typeof unwrappedValue === 'string') {\n            stringParser(styleKeyValueArray, unwrappedValue);\n        }\n        else {\n            ngDevMode &&\n                throwError('Unsupported styling type ' + typeof unwrappedValue + ': ' + unwrappedValue);\n        }\n        return styleKeyValueArray;\n    }\n    /**\n     * Set a `value` for a `key` taking style sanitization into account.\n     *\n     * See: `keyValueArraySet` for details\n     *\n     * @param keyValueArray KeyValueArray to add to.\n     * @param key Style key to add. (This key will be checked if it needs sanitization)\n     * @param value The value to set (If key needs sanitization it will be sanitized)\n     */\n    function styleKeyValueArraySet(keyValueArray, key, value) {\n        if (stylePropNeedsSanitization(key)) {\n            value = ɵɵsanitizeStyle(value);\n        }\n        keyValueArraySet(keyValueArray, key, value);\n    }\n    /**\n     * Update map based styling.\n     *\n     * Map based styling could be anything which contains more than one binding. For example `string`,\n     * or object literal. Dealing with all of these types would complicate the logic so\n     * instead this function expects that the complex input is first converted into normalized\n     * `KeyValueArray`. The advantage of normalization is that we get the values sorted, which makes it\n     * very cheap to compute deltas between the previous and current value.\n     *\n     * @param tView Associated `TView.data` contains the linked list of binding priorities.\n     * @param tNode `TNode` where the binding is located.\n     * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n     * @param renderer Renderer to use if any updates.\n     * @param oldKeyValueArray Previous value represented as `KeyValueArray`\n     * @param newKeyValueArray Current value represented as `KeyValueArray`\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @param bindingIndex Binding index of the binding.\n     */\n    function updateStylingMap(tView, tNode, lView, renderer, oldKeyValueArray, newKeyValueArray, isClassBased, bindingIndex) {\n        if (oldKeyValueArray === NO_CHANGE) {\n            // On first execution the oldKeyValueArray is NO_CHANGE => treat it as empty KeyValueArray.\n            oldKeyValueArray = EMPTY_ARRAY$3;\n        }\n        var oldIndex = 0;\n        var newIndex = 0;\n        var oldKey = 0 < oldKeyValueArray.length ? oldKeyValueArray[0] : null;\n        var newKey = 0 < newKeyValueArray.length ? newKeyValueArray[0] : null;\n        while (oldKey !== null || newKey !== null) {\n            ngDevMode && assertLessThan(oldIndex, 999, 'Are we stuck in infinite loop?');\n            ngDevMode && assertLessThan(newIndex, 999, 'Are we stuck in infinite loop?');\n            var oldValue = oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex + 1] : undefined;\n            var newValue = newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex + 1] : undefined;\n            var setKey = null;\n            var setValue = undefined;\n            if (oldKey === newKey) {\n                // UPDATE: Keys are equal => new value is overwriting old value.\n                oldIndex += 2;\n                newIndex += 2;\n                if (oldValue !== newValue) {\n                    setKey = newKey;\n                    setValue = newValue;\n                }\n            }\n            else if (newKey === null || oldKey !== null && oldKey < newKey) {\n                // DELETE: oldKey key is missing or we did not find the oldKey in the newValue\n                // (because the keyValueArray is sorted and `newKey` is found later alphabetically).\n                // `\"background\" < \"color\"` so we need to delete `\"background\"` because it is not found in the\n                // new array.\n                oldIndex += 2;\n                setKey = oldKey;\n            }\n            else {\n                // CREATE: newKey's is earlier alphabetically than oldKey's (or no oldKey) => we have new key.\n                // `\"color\" > \"background\"` so we need to add `color` because it is in new array but not in\n                // old array.\n                ngDevMode && assertDefined(newKey, 'Expecting to have a valid key');\n                newIndex += 2;\n                setKey = newKey;\n                setValue = newValue;\n            }\n            if (setKey !== null) {\n                updateStyling(tView, tNode, lView, renderer, setKey, setValue, isClassBased, bindingIndex);\n            }\n            oldKey = oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex] : null;\n            newKey = newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex] : null;\n        }\n    }\n    /**\n     * Update a simple (property name) styling.\n     *\n     * This function takes `prop` and updates the DOM to that value. The function takes the binding\n     * value as well as binding priority into consideration to determine which value should be written\n     * to DOM. (For example it may be determined that there is a higher priority overwrite which blocks\n     * the DOM write, or if the value goes to `undefined` a lower priority overwrite may be consulted.)\n     *\n     * @param tView Associated `TView.data` contains the linked list of binding priorities.\n     * @param tNode `TNode` where the binding is located.\n     * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n     * @param renderer Renderer to use if any updates.\n     * @param prop Either style property name or a class name.\n     * @param value Either style value for `prop` or `true`/`false` if `prop` is class.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @param bindingIndex Binding index of the binding.\n     */\n    function updateStyling(tView, tNode, lView, renderer, prop, value, isClassBased, bindingIndex) {\n        if (tNode.type !== 3 /* Element */) {\n            // It is possible to have styling on non-elements (such as ng-container).\n            // This is rare, but it does happen. In such a case, just ignore the binding.\n            return;\n        }\n        var tData = tView.data;\n        var tRange = tData[bindingIndex + 1];\n        var higherPriorityValue = getTStylingRangeNextDuplicate(tRange) ?\n            findStylingValue(tData, tNode, lView, prop, getTStylingRangeNext(tRange), isClassBased) :\n            undefined;\n        if (!isStylingValuePresent(higherPriorityValue)) {\n            // We don't have a next duplicate, or we did not find a duplicate value.\n            if (!isStylingValuePresent(value)) {\n                // We should delete current value or restore to lower priority value.\n                if (getTStylingRangePrevDuplicate(tRange)) {\n                    // We have a possible prev duplicate, let's retrieve it.\n                    value = findStylingValue(tData, null, lView, prop, bindingIndex, isClassBased);\n                }\n            }\n            var rNode = getNativeByIndex(getSelectedIndex(), lView);\n            applyStyling(renderer, isClassBased, rNode, prop, value);\n        }\n    }\n    /**\n     * Search for styling value with higher priority which is overwriting current value, or a\n     * value of lower priority to which we should fall back if the value is `undefined`.\n     *\n     * When value is being applied at a location, related values need to be consulted.\n     * - If there is a higher priority binding, we should be using that one instead.\n     *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp1`\n     *   requires that we check `exp2` to see if it is set to value other than `undefined`.\n     * - If there is a lower priority binding and we are changing to `undefined`\n     *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp2` to\n     *   `undefined` requires that we check `exp1` (and static values) and use that as new value.\n     *\n     * NOTE: The styling stores two values.\n     * 1. The raw value which came from the application is stored at `index + 0` location. (This value\n     *    is used for dirty checking).\n     * 2. The normalized value (converted to `KeyValueArray` if map and sanitized) is stored at `index +\n     * 1`.\n     *    The advantage of storing the sanitized value is that once the value is written we don't need\n     *    to worry about sanitizing it later or keeping track of the sanitizer.\n     *\n     * @param tData `TData` used for traversing the priority.\n     * @param tNode `TNode` to use for resolving static styling. Also controls search direction.\n     *   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.\n     *      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.\n     *   - `null` search prev and go all the way to end. Return last value where\n     *     `isStylingValuePresent(value)` is true.\n     * @param lView `LView` used for retrieving the actual values.\n     * @param prop Property which we are interested in.\n     * @param index Starting index in the linked list of styling bindings where the search should start.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function findStylingValue(tData, tNode, lView, prop, index, isClassBased) {\n        // `TNode` to use for resolving static styling. Also controls search direction.\n        //   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.\n        //      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.\n        //   - `null` search prev and go all the way to end. Return last value where\n        //     `isStylingValuePresent(value)` is true.\n        var isPrevDirection = tNode === null;\n        var value = undefined;\n        while (index > 0) {\n            var rawKey = tData[index];\n            var containsStatics = Array.isArray(rawKey);\n            // Unwrap the key if we contain static values.\n            var key = containsStatics ? rawKey[1] : rawKey;\n            var isStylingMap = key === null;\n            var valueAtLViewIndex = lView[index + 1];\n            if (valueAtLViewIndex === NO_CHANGE) {\n                // In firstUpdatePass the styling instructions create a linked list of styling.\n                // On subsequent passes it is possible for a styling instruction to try to read a binding\n                // which\n                // has not yet executed. In that case we will find `NO_CHANGE` and we should assume that\n                // we have `undefined` (or empty array in case of styling-map instruction) instead. This\n                // allows the resolution to apply the value (which may later be overwritten when the\n                // binding actually executes.)\n                valueAtLViewIndex = isStylingMap ? EMPTY_ARRAY$3 : undefined;\n            }\n            var currentValue = isStylingMap ? keyValueArrayGet(valueAtLViewIndex, prop) :\n                key === prop ? valueAtLViewIndex : undefined;\n            if (containsStatics && !isStylingValuePresent(currentValue)) {\n                currentValue = keyValueArrayGet(rawKey, prop);\n            }\n            if (isStylingValuePresent(currentValue)) {\n                value = currentValue;\n                if (isPrevDirection) {\n                    return value;\n                }\n            }\n            var tRange = tData[index + 1];\n            index = isPrevDirection ? getTStylingRangePrev(tRange) : getTStylingRangeNext(tRange);\n        }\n        if (tNode !== null) {\n            // in case where we are going in next direction AND we did not find anything, we need to\n            // consult residual styling\n            var residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;\n            if (residual != null /** OR residual !=== undefined */) {\n                value = keyValueArrayGet(residual, prop);\n            }\n        }\n        return value;\n    }\n    /**\n     * Determines if the binding value should be used (or if the value is 'undefined' and hence priority\n     * resolution should be used.)\n     *\n     * @param value Binding style value.\n     */\n    function isStylingValuePresent(value) {\n        // Currently only `undefined` value is considered non-binding. That is `undefined` says I don't\n        // have an opinion as to what this binding should be and you should consult other bindings by\n        // priority to determine the valid value.\n        // This is extracted into a single function so that we have a single place to control this.\n        return value !== undefined;\n    }\n    /**\n     * Sanitizes or adds suffix to the value.\n     *\n     * If value is `null`/`undefined` no suffix is added\n     * @param value\n     * @param suffixOrSanitizer\n     */\n    function normalizeAndApplySuffixOrSanitizer(value, suffixOrSanitizer) {\n        if (value == null /** || value === undefined */) {\n            // do nothing\n        }\n        else if (typeof suffixOrSanitizer === 'function') {\n            // sanitize the value.\n            value = suffixOrSanitizer(value);\n        }\n        else if (typeof suffixOrSanitizer === 'string') {\n            value = value + suffixOrSanitizer;\n        }\n        else if (typeof value === 'object') {\n            value = stringify(unwrapSafeValue(value));\n        }\n        return value;\n    }\n    /**\n     * Tests if the `TNode` has input shadow.\n     *\n     * An input shadow is when a directive steals (shadows) the input by using `@Input('style')` or\n     * `@Input('class')` as input.\n     *\n     * @param tNode `TNode` which we would like to see if it has shadow.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function hasStylingInputShadow(tNode, isClassBased) {\n        return (tNode.flags & (isClassBased ? 16 /* hasClassInput */ : 32 /* hasStyleInput */)) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var tNode = tView.firstCreatePass ?\n            getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, null, null) :\n            tView.data[adjustedIndex];\n        var textNative = lView[adjustedIndex] = createTextNode(value, lView[RENDERER]);\n        appendChild(tView, lView, textNative, tNode);\n        // Text nodes are self closing.\n        setPreviousOrParentTNode(tNode, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     * Update an interpolated class on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate1('key: ', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate2('key: ', v0, '; key1: ', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key2: {{v1}}; key2: {{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate3(\n     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate4(\n     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate5(\n     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}};\n     *             key5: {{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate6(\n     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *    'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n     *             key6: {{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate7(\n     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *    '; key6: ', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n     *             key6: {{v6}}; key7: {{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate8(\n     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *    '; key6: ', v6, '; key7: ', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     * Update an interpolated style on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  class=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n     *         key6: {{v6}}; key7: {{v7}}; key8: {{v8}}; key9: {{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolateV(\n     *    ['key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *     '; key6: ', v6, '; key7: ', v7, '; key8: ', v8, '; key9: ', v9, 'suffix']);\n     * ```\n     *.\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '; key2: ', value1, '; key2: ', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        ɵɵstyleMap(interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 9 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            var tView = getTView();\n            elementPropertyInternal(tView, lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(tView.data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the component instance associated with a given DOM element.\n     *\n     * @usageNotes\n     * Given the following DOM structure:\n     * ```html\n     * <my-app>\n     *   <div>\n     *     <child-comp></child-comp>\n     *   </div>\n     * </my-app>\n     * ```\n     * Calling `getComponent` on `<child-comp>` will return the instance of `ChildComponent`\n     * associated with this DOM element.\n     *\n     * Calling the function on `<my-app>` will return the `MyApp` instance.\n     *\n     *\n     * @param element DOM element from which the component should be retrieved.\n     * @returns Component instance associated with the element or `null` if there\n     *    is no component associated with it.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getComponent(element) {\n        assertDomElement(element);\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * If inside an embedded view (e.g. `*ngIf` or `*ngFor`), retrieves the context of the embedded\n     * view that the element is part of. Otherwise retrieves the instance of the component whose view\n     * owns the element (in this case, the result is the same as calling `getOwningComponent`).\n     *\n     * @param element Element for which to get the surrounding component instance.\n     * @returns Instance of the component that is around the element or null if the element isn't\n     *    inside any component.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getContext(element) {\n        assertDomElement(element);\n        var context = loadLContext(element, false);\n        return context === null ? null : context.lView[CONTEXT];\n    }\n    /**\n     * Retrieves the component instance whose view contains the DOM element.\n     *\n     * For example, if `<child-comp>` is used in the template of `<app-comp>`\n     * (i.e. a `ViewChild` of `<app-comp>`), calling `getOwningComponent` on `<child-comp>`\n     * would return `<app-comp>`.\n     *\n     * @param elementOrDir DOM element, component or directive instance\n     *    for which to retrieve the root components.\n     * @returns Component instance whose view owns the DOM element or null if the element is not\n     *    part of a component view.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getOwningComponent(elementOrDir) {\n        var context = loadLContext(elementOrDir, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieves all root components associated with a DOM element, directive or component instance.\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param elementOrDir DOM element, component or directive instance\n     *    for which to retrieve the root components.\n     * @returns Root components associated with the target object.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getRootComponents(elementOrDir) {\n        return __spread(getRootContext(elementOrDir).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with an element, component or directive instance.\n     *\n     * @param elementOrDir DOM element, component or directive instance for which to\n     *    retrieve the injector.\n     * @returns Injector associated with the element, component or directive instance.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getInjector(elementOrDir) {\n        var context = loadLContext(elementOrDir, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directive instances associated with a given DOM element. Does not include\n     * component instances.\n     *\n     * @usageNotes\n     * Given the following DOM structure:\n     * ```\n     * <my-app>\n     *   <button my-button></button>\n     *   <my-comp></my-comp>\n     * </my-app>\n     * ```\n     * Calling `getDirectives` on `<button>` will return an array with an instance of the `MyButton`\n     * directive that is associated with the DOM element.\n     *\n     * Calling `getDirectives` on `<my-comp>` will return an empty array.\n     *\n     * @param element DOM element for which to get the directives.\n     * @returns Array of directives associated with the element.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getDirectives(element) {\n        var context = loadLContext(element);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        // The `directives` in this case are a named array called `LComponentView`. Clone the\n        // result so we don't expose an internal data structure in the user's console.\n        return context.directives === null ? [] : __spread(context.directives);\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target DOM element, component or directive instance for which to retrieve\n     *    the local references.\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieves the host element of a component or directive instance.\n     * The host element is the DOM element that matched the selector of the directive.\n     *\n     * @param componentOrDirective Component or directive instance for which the host\n     *     element should be retrieved.\n     * @returns Host element of the target.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getHostElement(componentOrDirective) {\n        return getLContext(componentOrDirective).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Element');\n        return loadLContext(node);\n    }\n    /**\n     * Retrieves a list of event listeners associated with a DOM element. The list does include host\n     * listeners, but it does not include event listeners defined outside of the Angular context\n     * (e.g. through `addEventListener`).\n     *\n     * @usageNotes\n     * Given the following DOM structure:\n     * ```\n     * <my-app>\n     *   <div (click)=\"doSomething()\"></div>\n     * </my-app>\n     *\n     * ```\n     * Calling `getListeners` on `<div>` will return an object that looks as follows:\n     * ```\n     * {\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * }\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @returns Array of event listeners on the DOM element.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getListeners(element) {\n        assertDomElement(element);\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var type = (typeof useCaptureOrIndx === 'boolean' || useCaptureOrIndx >= 0) ? 'dom' : 'output';\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ? useCaptureOrIndx : false;\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture, type: type });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(lView[TVIEW], nodeIndex - HEADER_OFFSET);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n    /**\n     * Retrieve the component `LView` from component/element.\n     *\n     * NOTE: `LView` is a private and should not be leaked outside.\n     *       Don't export this method to `ng.*` on window.\n     *\n     * @param target DOM element or component instance for which to retrieve the LView.\n     */\n    function getComponentLView(target) {\n        var lContext = loadLContext(target);\n        var nodeIndx = lContext.nodeIndex;\n        var lView = lContext.lView;\n        var componentLView = lView[nodeIndx];\n        ngDevMode && assertLView(componentLView);\n        return componentLView;\n    }\n    /** Asserts that a value is a DOM Element. */\n    function assertDomElement(value) {\n        if (typeof Element !== 'undefined' && !(value instanceof Element)) {\n            throw new Error('Expecting instance of DOM Element');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks a component for check (in case of OnPush components) and synchronously\n     * performs change detection on the application this component belongs to.\n     *\n     * @param component Component to {@link ChangeDetectorRef#markForCheck mark for check}.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function applyChanges(component) {\n        markDirty(component);\n        getRootComponents(component).forEach(function (rootComponent) { return detectChanges(rootComponent); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --config=ivy\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getOwningComponent', getOwningComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('applyChanges', applyChanges);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n    };\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: ɵ0$b\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRenderer = rendererFactory.createRenderer(null, null);\n        var hostRNode = locateHostElement(hostRenderer, opts.host || componentTag, componentDef.encapsulation);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootTView, rootView, null);\n            // update mode pass\n            refreshView(rootTView, rootView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param hostRenderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, hostRenderer, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var mergedAttrs = tNode.mergedAttrs = def.hostAttrs;\n        if (mergedAttrs !== null) {\n            computeStaticStyling(tNode, mergedAttrs);\n            if (rNode !== null) {\n                setUpAttributes(hostRenderer, rNode, mergedAttrs);\n                if (tNode.classes !== null) {\n                    writeDirectClass(hostRenderer, rNode, tNode.classes);\n                }\n                if (tNode.styles !== null) {\n                    writeDirectStyle(hostRenderer, rNode, tNode.styles);\n                }\n            }\n        }\n        var viewRenderer = rendererFactory.createRenderer(rNode, def);\n        var componentView = createLView(rootView, getOrCreateTComponentView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, viewRenderer, sanitizer);\n        if (tView.firstCreatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initTNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootLView, rootContext, hostFeatures) {\n        var tView = rootLView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootLView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootLView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass &&\n            (componentDef.hostBindings !== null || componentDef.hostAttrs !== null)) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setSelectedIndex(elementIndex);\n            var rootTView = rootLView[TVIEW];\n            addHostBindingsToExpandoInstructions(rootTView, componentDef);\n            growHostVarsSpace(rootTView, rootLView, componentDef.hostVars);\n            invokeHostBindingsInCreationMode(componentDef, component);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {hostFeatures: [LifecycleHooksFeature]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var shouldInheritFields = true;\n        var inheritanceChain = [definition];\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            if (superDef) {\n                if (shouldInheritFields) {\n                    inheritanceChain.push(superDef);\n                    // Some fields in the definition may be empty, if there were no values to put in them that\n                    // would've justified object creation. Unwrap them if necessary.\n                    var writeableDef = definition;\n                    writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                    writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                    writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n                    // Merge hostBindings\n                    var superHostBindings = superDef.hostBindings;\n                    superHostBindings && inheritHostBindings(definition, superHostBindings);\n                    // Merge queries\n                    var superViewQuery = superDef.viewQuery;\n                    var superContentQueries = superDef.contentQueries;\n                    superViewQuery && inheritViewQuery(definition, superViewQuery);\n                    superContentQueries && inheritContentQueries(definition, superContentQueries);\n                    // Merge inputs and outputs\n                    fillProperties(definition.inputs, superDef.inputs);\n                    fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                    fillProperties(definition.outputs, superDef.outputs);\n                    // Merge animations metadata.\n                    // If `superDef` is a Component, the `data` field is present (defaults to an empty object).\n                    if (isComponentDef(superDef) && superDef.data.animation) {\n                        // If super def is a Component, the `definition` is also a Component, since Directives can\n                        // not inherit Components (we throw an error above and cannot reach this code).\n                        var defData = definition.data;\n                        defData.animation = (defData.animation || []).concat(superDef.data.animation);\n                    }\n                    // Inherit hooks\n                    // Assume super class inheritance feature has already run.\n                    writeableDef.afterContentChecked =\n                        writeableDef.afterContentChecked || superDef.afterContentChecked;\n                    writeableDef.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                    writeableDef.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                    writeableDef.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                    writeableDef.doCheck = definition.doCheck || superDef.doCheck;\n                    writeableDef.onDestroy = definition.onDestroy || superDef.onDestroy;\n                    writeableDef.onInit = definition.onInit || superDef.onInit;\n                }\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                        // If `InheritDefinitionFeature` is a part of the current `superDef`, it means that this\n                        // def already has all the necessary information inherited from its super class(es), so we\n                        // can stop merging fields from super classes. However we need to iterate through the\n                        // prototype chain to look for classes that might contain other \"features\" (like\n                        // NgOnChanges), which we should invoke for the original `definition`. We set the\n                        // `shouldInheritFields` flag to indicate that, essentially skipping fields inheritance\n                        // logic and only invoking functions from the \"features\" list.\n                        if (feature === ɵɵInheritDefinitionFeature) {\n                            shouldInheritFields = false;\n                        }\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n        mergeHostAttrsAcrossInheritance(inheritanceChain);\n    }\n    /**\n     * Merge the `hostAttrs` and `hostVars` from the inherited parent to the base class.\n     *\n     * @param inheritanceChain A list of `WritableDefs` starting at the top most type and listing\n     * sub-types in order. For each type take the `hostAttrs` and `hostVars` and merge it with the child\n     * type.\n     */\n    function mergeHostAttrsAcrossInheritance(inheritanceChain) {\n        var hostVars = 0;\n        var hostAttrs = null;\n        // We process the inheritance order from the base to the leaves here.\n        for (var i = inheritanceChain.length - 1; i >= 0; i--) {\n            var def = inheritanceChain[i];\n            // For each `hostVars`, we need to add the superclass amount.\n            def.hostVars = (hostVars += def.hostVars);\n            // for each `hostAttrs` we need to merge it with superclass.\n            def.hostAttrs =\n                mergeHostAttrs(def.hostAttrs, hostAttrs = mergeHostAttrs(hostAttrs, def.hostAttrs));\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        if (prevHostBindings) {\n            definition.hostBindings = function (rf, ctx) {\n                superHostBindings(rf, ctx);\n                prevHostBindings(rf, ctx);\n            };\n        }\n        else {\n            definition.hostBindings = superHostBindings;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fields which exist on either directive or component definitions, and need to be copied from\n     * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n     */\n    var COPY_DIRECTIVE_FIELDS = [\n        // The child class should use the providers of its parent.\n        'providersResolver',\n    ];\n    /**\n     * Fields which exist only on component definitions, and need to be copied from parent to child\n     * classes by the `ɵɵCopyDefinitionFeature`.\n     *\n     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n     * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n     */\n    var COPY_COMPONENT_FIELDS = [\n        // The child class should use the template function of its parent, including all template\n        // semantics.\n        'template',\n        'decls',\n        'consts',\n        'vars',\n        'onPush',\n        'ngContentSelectors',\n        // The child class should use the CSS styles of its parent, including all styling semantics.\n        'styles',\n        'encapsulation',\n        // The child class should be checked by the runtime in the same way as its parent.\n        'schemas',\n    ];\n    /**\n     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n     * definition.\n     *\n     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n     * generates a skeleton definition on the child class, and applies this feature.\n     *\n     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n     * including things like the component template function.\n     *\n     * @param definition The definition of a child class which inherits from a parent class with its\n     * own definition.\n     *\n     * @codeGenApi\n     */\n    function ɵɵCopyDefinitionFeature(definition) {\n        var e_1, _a, e_2, _b;\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp;\n        }\n        else {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        // Needed because `definition` fields are readonly.\n        var defAny = definition;\n        try {\n            // Copy over any fields that apply to either directives or components.\n            for (var COPY_DIRECTIVE_FIELDS_1 = __values(COPY_DIRECTIVE_FIELDS), COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next(); !COPY_DIRECTIVE_FIELDS_1_1.done; COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next()) {\n                var field = COPY_DIRECTIVE_FIELDS_1_1.value;\n                defAny[field] = superDef[field];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (COPY_DIRECTIVE_FIELDS_1_1 && !COPY_DIRECTIVE_FIELDS_1_1.done && (_a = COPY_DIRECTIVE_FIELDS_1.return)) _a.call(COPY_DIRECTIVE_FIELDS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isComponentDef(superDef)) {\n            try {\n                // Copy over any component-specific fields.\n                for (var COPY_COMPONENT_FIELDS_1 = __values(COPY_COMPONENT_FIELDS), COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next(); !COPY_COMPONENT_FIELDS_1_1.done; COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next()) {\n                    var field = COPY_COMPONENT_FIELDS_1_1.value;\n                    defAny[field] = superDef[field];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (COPY_COMPONENT_FIELDS_1_1 && !COPY_COMPONENT_FIELDS_1_1.done && (_b = COPY_COMPONENT_FIELDS_1.return)) _b.call(COPY_COMPONENT_FIELDS_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var tView = getTView();\n        if (tView.firstCreatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var tView = getTView();\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex === -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    registerDestroyHooksIfSupported(tView, provider, tInjectables.length);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    registerDestroyHooksIfSupported(tView, provider, tInjectables.length);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    registerDestroyHooksIfSupported(tView, provider, existingProvidersFactoryIndex > -1 ?\n                        existingProvidersFactoryIndex :\n                        existingViewProvidersFactoryIndex);\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Registers the `ngOnDestroy` hook of a provider, if the provider supports destroy hooks.\n     * @param tView `TView` in which to register the hook.\n     * @param provider Provider whose hook should be registered.\n     * @param contextIndex Index under which to find the context for the hook when it's being invoked.\n     */\n    function registerDestroyHooksIfSupported(tView, provider, contextIndex) {\n        var providerIsTypeProvider = isTypeProvider(provider);\n        if (providerIsTypeProvider || isClassProvider(provider)) {\n            var prototype = (provider.useClass || provider).prototype;\n            var ngOnDestroy = prototype.ngOnDestroy;\n            if (ngOnDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(contextIndex, ngOnDestroy);\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lView, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(lView, lView[TVIEW], this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        // TODO(misko): This needs to be refactored into a separate file so that it can be imported from\n        // `node_manipulation.ts` Currently doing the import cause resolution order to change and fails\n        // the tests. The work around is to have hard coded value in `node_manipulation.ts` for now.\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.4');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    var ɵ0$c = trackByIdentity;\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = {};\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = {};\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    function getNamespace$1(elementName) {\n        var name = elementName.toLowerCase();\n        return name === 'svg' ? SVG_NAMESPACE : (name === 'math' ? MATH_ML_NAMESPACE : null);\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = stringifyCSSSelectorList(componentDef.selectors);\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRenderer = rendererFactory.createRenderer(null, this.componentDef);\n            // Determine a tag name used for creating host elements when this component is created\n            // dynamically. Default to 'div' if this component did not specify any tag name in its selector.\n            var elementName = this.componentDef.selectors[0][0] || 'div';\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(hostRenderer, rootSelectorOrNode, this.componentDef.encapsulation) :\n                elementCreate(elementName, rendererFactory.createRenderer(null, this.componentDef), getNamespace$1(elementName));\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, hostRenderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, hostRenderer);\n                if (hostRNode) {\n                    if (rootSelectorOrNode) {\n                        setUpAttributes(hostRenderer, hostRNode, ['ng-version', VERSION.full]);\n                    }\n                    else {\n                        // If host element is created as a part of this function call (i.e. `rootSelectorOrNode`\n                        // is not defined), also apply attributes and classes extracted from component selector.\n                        // Extract attributes and classes from the first selector only to match VE behavior.\n                        var _a = extractAttrsAndClassesFromSelector(this.componentDef.selectors[0]), attrs = _a.attrs, classes = _a.classes;\n                        if (attrs) {\n                            setUpAttributes(hostRenderer, hostRNode, attrs);\n                        }\n                        if (classes && classes.length > 0) {\n                            writeDirectClass(hostRenderer, hostRNode, classes.join(' '));\n                        }\n                    }\n                }\n                tElementNode = getTNode(rootLView[TVIEW], 0);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootTView, rootLView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en',\n        [['a', 'p'], ['AM', 'PM'], u],\n        [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u,\n        [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']],\n        0,\n        [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],\n        ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'],\n        'USD',\n        '$',\n        'US Dollar',\n        {},\n        plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    /**\n     * Register locale data to be used internally by Angular. See the\n     * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n     *\n     * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n     */\n    function registerLocaleData(data, localeId, extraData) {\n        if (typeof localeId !== 'string') {\n            extraData = localeId;\n            localeId = data[exports.ɵLocaleDataIndex.LocaleId];\n        }\n        localeId = localeId.toLowerCase().replace(/_/g, '-');\n        LOCALE_DATA[localeId] = data;\n        if (extraData) {\n            LOCALE_DATA[localeId][exports.ɵLocaleDataIndex.ExtraData] = extraData;\n        }\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = normalizeLocale(locale);\n        var match = getLocaleData(normalizedLocale);\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = getLocaleData(parentLocale);\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n    /**\n     * Retrieves the default currency code for the given locale.\n     *\n     * The default is defined as the first currency which is still in use.\n     *\n     * @param locale The code of the locale whose currency code we want.\n     * @returns The code of the default currency for the given locale.\n     *\n     */\n    function getLocaleCurrencyCode(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.CurrencyCode] || null;\n    }\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n     * or from the global `ng.common.locale`.\n     */\n    function getLocaleData(normalizedLocale) {\n        if (!(normalizedLocale in LOCALE_DATA)) {\n            LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales &&\n                _global.ng.common.locales[normalizedLocale];\n        }\n        return LOCALE_DATA[normalizedLocale];\n    }\n    /**\n     * Helper function to remove all the locale data from `LOCALE_DATA`.\n     */\n    function unregisterAllLocaleData() {\n        LOCALE_DATA = {};\n    }\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyCode\"] = 15] = \"CurrencyCode\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 16] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 17] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 18] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 19] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 20] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n    /**\n     * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n     */\n    function normalizeLocale(locale) {\n        return locale.toLowerCase().replace(/_/g, '-');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n    /**\n     * USD currency code that the application uses by default for CurrencyPipe when no\n     * DEFAULT_CURRENCY_CODE is provided.\n     */\n    var USD_CURRENCY_CODE = 'USD';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(getLView(), tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one. We should also\n        // keep track whether an element was a parent node or not, so that the logic that consumes\n        // the generated `I18nMutateOpCode`s can leverage this information to properly set TNode state\n        // (whether it's a parent or sibling).\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            var previousTNodeIndex = previousOrParentTNode.index - HEADER_OFFSET;\n            // If current TNode is a sibling node, encode it using a negative index. This information is\n            // required when the `Select` action is processed (see the `readCreateOpCodes` function).\n            if (!getIsParent()) {\n                previousTNodeIndex = ~previousTNodeIndex;\n            }\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousTNodeIndex << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    var isElement = value.charAt(0) === \"#\" /* ELEMENT */;\n                    // The value represents a placeholder that we move to the designated index.\n                    // Note: positive indicies indicate that a TNode with a given index should also be marked as\n                    // parent while executing `Select` instruction.\n                    createOpCodes.push((isElement ? phIndex : ~phIndex) << 3 /* SHIFT_REF */ |\n                        0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (isElement) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(tView, lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tView, tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(tView, lView, tNode);\n            return tNode;\n        }\n        appendChild(tView, lView, getNativeByTNode(tNode, lView), tNode);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(tView, lView, slotValue[NATIVE], tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView, lView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView, lView) {\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tView, lView);\n        // Remove deleted nodes\n        var index = rootIndex + 1;\n        while (index <= lastCreatedNode.index - HEADER_OFFSET) {\n            if (visitedNodes.indexOf(index) === -1) {\n                removeNode(tView, lView, index, /* markAsDetached */ true);\n            }\n            // Check if an element has any local refs and skip them\n            var tNode = getTNode(tView, index);\n            if (tNode && (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) &&\n                tNode.localNames !== null) {\n                // Divide by 2 to get the number of local refs,\n                // since they are stored as an array that also includes directive indexes,\n                // i.e. [\"localRef\", directiveIndex, ...]\n                index += tNode.localNames.length >> 1;\n            }\n            index++;\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(tView, lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, tView, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(tView, lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(tView, destinationNodeIndex);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode =\n                            appendI18nNode(tView, currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        // Negative indicies indicate that a given TNode is a sibling node, not a parent node\n                        // (see `i18nStartFirstPass` for additional information).\n                        var isParent = opCode >= 0;\n                        var nodeIndex = (isParent ? opCode : ~opCode) >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(tView, nodeIndex);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, isParent);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(tView, elementIndex);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, tView, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(tView, lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(tView, lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, tView, lView, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(lView[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(tView, lView, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(lView, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(tView, nodeIndex);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(tView, lView, nodeIndex_1, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(tView, nestedIcuNodeIndex);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    if (caseIndex > -1) {\n                                        // Add the nodes for the new case\n                                        readCreateOpCodes(-1, tIcu.create[caseIndex], tView, lView);\n                                        caseCreated = true;\n                                    }\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(tView, nodeIndex);\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, tView, lView, caseCreated);\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(tView, lView, index, markAsDetached) {\n        var removedPhTNode = getTNode(tView, index);\n        var removedPhRNode = getNativeByIndex(index, lView);\n        if (removedPhRNode) {\n            nativeRemoveNode(lView[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(lView, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(lView[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var tNode = getTNode(tView, previousElementIndex);\n                        // Set attributes for Elements only, for other types (like ElementContainer),\n                        // only set inputs below\n                        if (tNode.type === 3 /* Element */) {\n                            elementAttributeInternal(previousElementIndex, attrName, value, tView, lView);\n                        }\n                        // Check if that attribute is a directive input\n                        var dataValue = tNode.inputs !== null && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(tView, lView, dataValue, attrName, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var tView = getTView();\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = getBindingIndex() - shiftsCounter - 1;\n            var lView = getLView();\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, tView, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(getDocument());\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id) || autoRegisterModuleById[id];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            // When bootstrapping a module we have a dependency graph that looks like this:\n            // ApplicationRef -> ComponentFactoryResolver -> NgModuleRef. The problem is that if the\n            // module being resolved tries to inject the ComponentFactoryResolver, it'll create a\n            // circular dependency which will result in a runtime error, because the injector doesn't\n            // exist yet. We work around the issue by creating the ComponentFactoryResolver ourselves\n            // and providing it, rather than letting the injector resolve it.\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1(_this);\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            ngLocaleIdDef && setLocaleId(ngLocaleIdDef);\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            _this._r3Injector = createInjector(ngModuleType, _parent, [\n                { provide: NgModuleRef, useValue: _this },\n                { provide: ComponentFactoryResolver, useValue: _this.componentFactoryResolver }\n            ], stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return lView[bindingIndex] === NO_CHANGE ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        return pureFunction1Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        return pureFunction2Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        return pureFunction3Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        return pureFunction4Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        return pureFunctionVInternal(getLView(), getBindingRoot(), slotOffset, pureFn, exps, thisArg);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1Internal(lView, bindingRoot, slotOffset, pureFn, exp, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     */\n    function pureFunction4Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionVInternal(lView, bindingRoot, slotOffset, pureFn, exps, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstCreatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var previousInjectImplementation = setInjectImplementation(ɵɵdirectiveInject);\n        var pipeInstance = pipeFactory();\n        setInjectImplementation(previousInjectImplementation);\n        store(tView, getLView(), index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunction1Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunction2Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ? pureFunction3Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ? pureFunction4Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunctionVInternal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = getBindingIndex();\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                var declarationNodeIdx = this._declarationNodeIndex;\n                var parent_1 = tNode.parent;\n                // Determine if a given TNode is a \"direct\" child of a node on which a content query was\n                // declared (only direct children of query's host node can match with the descendants: false\n                // option). There are 3 main use-case / conditions to consider here:\n                // - <needs-target><i #target></i></needs-target>: here <i #target> parent node is a query\n                // host node;\n                // - <needs-target><ng-template [ngIf]=\"true\"><i #target></i></ng-template></needs-target>:\n                // here <i #target> parent node is null;\n                // - <needs-target><ng-container><i #target></i></ng-container></needs-target>: here we need\n                // to go past `<ng-container>` to determine <i #target> parent node (but we shouldn't traverse\n                // up past the query's host node!).\n                while (parent_1 !== null && parent_1.type === 4 /* ElementContainer */ &&\n                    parent_1.index !== declarationNodeIdx) {\n                    parent_1 = parent_1.parent;\n                }\n                return declarationNodeIdx === (parent_1 !== null ? parent_1.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView, lView[TVIEW], matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(tView, lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = tView.data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(tView, lView, queryIndex, result) {\n        var tQuery = tView.queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(tView, lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView[TVIEW], embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            var embeddedLView = embeddedLViews[i_2];\n                            collectQueryResults(embeddedLView[TVIEW], embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var tView = getTView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(tView, queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ?\n                    collectQueryResults(tView, lView, queryIndex, []) :\n                    materializeViewResults(tView, lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getTView(), getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getTView(), getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(tView, lView, predicate, descend, read, isStatic) {\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(tView, lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getTView(), getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getTView(), getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(tView, lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(tView, lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(tView, lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(tView, lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$d = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinvalidFactory': ɵɵinvalidFactory,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleMapInterpolate1': ɵɵstyleMapInterpolate1,\n        'ɵɵstyleMapInterpolate2': ɵɵstyleMapInterpolate2,\n        'ɵɵstyleMapInterpolate3': ɵɵstyleMapInterpolate3,\n        'ɵɵstyleMapInterpolate4': ɵɵstyleMapInterpolate4,\n        'ɵɵstyleMapInterpolate5': ɵɵstyleMapInterpolate5,\n        'ɵɵstyleMapInterpolate6': ɵɵstyleMapInterpolate6,\n        'ɵɵstyleMapInterpolate7': ɵɵstyleMapInterpolate7,\n        'ɵɵstyleMapInterpolate8': ɵɵstyleMapInterpolate8,\n        'ɵɵstyleMapInterpolateV': ɵɵstyleMapInterpolateV,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$d)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$5 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$5).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$5)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$5)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                    // Set `schemas` on ngModuleDef to an empty array in JIT mode to indicate that runtime\n                    // should verify that there are no unknown elements in a template. In AOT mode, that check\n                    // happens at compile time and `schemas` information is not present on Component and Module\n                    // defs after compilation (so the check doesn't happen the second time at runtime).\n                    if (!ngModuleDef.schemas) {\n                        ngModuleDef.schemas = [];\n                    }\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$5,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$5).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$5).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. This function can\n     * be called on modules with components that have not fully compiled yet, but the result should not\n     * be used until they have.\n     *\n     * @param moduleType module that transitive scope should be calculated for.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addDirectiveDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var reflect = getReflect();\n        var propMetadata = reflect.ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: reflect.hasLifecycleHook(type, 'ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addDirectiveDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type.prototype).constructor;\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the def if there are no annotations and the def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n                shouldAddAbstractDirective(parent)) {\n                compileDirective(parent, null);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnnotation)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        return exportAs === undefined ? null : splitByComma(exportAs);\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnnotation(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n    var LIFECYCLE_HOOKS = [\n        'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n        'ngAfterContentInit', 'ngAfterContentChecked'\n    ];\n    function shouldAddAbstractDirective(type) {\n        var reflect = getReflect();\n        if (LIFECYCLE_HOOKS.some(function (hookName) { return reflect.hasLifecycleHook(type, hookName); })) {\n            return true;\n        }\n        var propMetadata = reflect.propMetadata(type);\n        for (var field in propMetadata) {\n            var annotations = propMetadata[field];\n            for (var i = 0; i < annotations.length; i++) {\n                var current = annotations[i];\n                var metadataName = current.ngMetadataName;\n                if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n                    metadataName === 'Output' || metadataName === 'HostBinding' ||\n                    metadataName === 'HostListener') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$e = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$3 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$e, undefined, undefined, ɵ1$3);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     *\n     * ```\n     *\n     * The following example registers another DOM event handler that listens for key-press events.\n     * ``` ts\n     * import { HostListener, Component } from \"@angular/core\";\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: `<h1>Hello, you have pressed keys {{counter}} number of times!</h1> Press any key to\n     * increment the counter.\n     *   <button (click)=\"resetCounter()\">Reset Counter</button>`\n     * })\n     * class AppComponent {\n     *   counter = 0;\n     *   @HostListener('window:keydown', ['$event'])\n     *   handleKeyDown(event: KeyboardEvent) {\n     *     this.counter++;\n     *   }\n     *   resetCounter() {\n     *     this.counter = 0;\n     *   }\n     * }\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$f = function (ngModule) { return ngModule; }, ɵ1$4 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$f, undefined, undefined, ɵ1$4);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injection token that allows you to provide one or more initialization functions.\n     * These function are injected at application startup and executed during\n     * app initialization. If any of these functions returns a Promise, initialization\n     * does not complete until the Promise is resolved.\n     *\n     * You can, for example, create a factory function that loads language data\n     * or an external configuration, and provide that function to the `APP_INITIALIZER` token.\n     * That way, the function is executed during the application bootstrap process,\n     * and the needed data is available on startup.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Provide this token to set the default currency code your application uses for\n     * CurrencyPipe when there is no currency code passed into it. This is only used by\n     * CurrencyPipe and has no relation to locale currency. Defaults to USD if not configured.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * <div class=\"alert is-helpful\">\n     *\n     * **Deprecation notice:**\n     *\n     * The default currency code is currently always `USD` but this is deprecated from v9.\n     *\n     * **In v10 the default currency code will be taken from the current locale.**\n     *\n     * If you need the previous behavior then set it by creating a `DEFAULT_CURRENCY_CODE` provider in\n     * your application `NgModule`:\n     *\n     * ```ts\n     * {provide: DEFAULT_CURRENCY_CODE, useValue: 'USD'}\n     * ```\n     *\n     * </div>\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: DEFAULT_CURRENCY_CODE, useValue: 'EUR' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var DEFAULT_CURRENCY_CODE = new InjectionToken('DefaultCurrencyCode');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getNativeRequestAnimationFrame() {\n        var nativeRequestAnimationFrame = _global['requestAnimationFrame'];\n        var nativeCancelAnimationFrame = _global['cancelAnimationFrame'];\n        if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {\n            // use unpatched version of requestAnimationFrame(native delegate) if possible\n            // to avoid another Change detection\n            var unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedRequestAnimationFrame) {\n                nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n            }\n            var unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedCancelAnimationFrame) {\n                nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n            }\n        }\n        return { nativeRequestAnimationFrame: nativeRequestAnimationFrame, nativeCancelAnimationFrame: nativeCancelAnimationFrame };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b, _c = _a.shouldCoalesceEventChangeDetection, shouldCoalesceEventChangeDetection = _c === void 0 ? false : _c;\n            this.hasPendingMacrotasks = false;\n            this.hasPendingMicrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;\n            self.lastRequestAnimationFrameId = -1;\n            self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function delayChangeDetectionForEvents(zone) {\n        if (zone.lastRequestAnimationFrameId !== -1) {\n            return;\n        }\n        zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, function () {\n            zone.lastRequestAnimationFrameId = -1;\n            updateMicroTaskStatus(zone);\n            checkStable(zone);\n        });\n        updateMicroTaskStatus(zone);\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        var delayChangeDetectionForEventsDelegate = function () { delayChangeDetectionForEvents(zone); };\n        var maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection &&\n            zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true, 'maybeDelayChangeDetection': maybeDelayChangeDetection },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (maybeDelayChangeDetection && task.type === 'eventTask') {\n                        maybeDelayChangeDetection();\n                    }\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone._hasPendingMicrotasks = hasTaskState.microTask;\n                        updateMicroTaskStatus(zone);\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function updateMicroTaskStatus(zone) {\n        if (zone._hasPendingMicrotasks ||\n            (zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1)) {\n            zone.hasPendingMicrotasks = true;\n        }\n        else {\n            zone.hasPendingMicrotasks = false;\n        }\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__PRE_R3__;\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZoneEventCoalescing = (options && options.ngZoneEventCoalescing) || false;\n            var ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        if (ivyEnabled) {\n                            // If the `LOCALE_ID` provider is defined at bootstrap then we set the value for ivy\n                            var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                            setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                        }\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption, ngZoneEventCoalescing) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({\n                enableLongStackTrace: isDevMode(),\n                shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\n            });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            /** @internal */\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ApplicationRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getOwningComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(function (listener) { return listener.type === 'dom'; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = {};\n                // Collect properties from the DOM.\n                copyDomProperties(this.nativeElement, properties);\n                // Collect properties from the bindings. This is needed for animation renderer which has\n                // synthetic properties which don't get reflected into the DOM.\n                collectPropertyBindings(properties, tNode, lView, tData);\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    var lowercaseName = attr.name.toLowerCase();\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(lowercaseName) === -1) {\n                        // Save the lowercase name to align the behavior between browsers.\n                        // IE preserves the case, while all other browser convert it to lower case.\n                        attributes[lowercaseName] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var result = {};\n                var element = this.nativeElement;\n                // SVG elements return an `SVGAnimatedString` instead of a plain string for the `className`.\n                var className = element.className;\n                var classes = className && typeof className !== 'string' ? className.baseVal.split(' ') :\n                    className.split(' ');\n                classes.forEach(function (value) { return result[value] = true; });\n                return result;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback.call(node, eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use '__ngUnwrap__' as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    // In order to ensure that we can detect the special __ngUnwrap__ token described above, we\n                    // use `toString` on the listener and see if it contains the token. We use this approach to\n                    // ensure that it still worked with compiled code since it cannot remove or rename string\n                    // literals. We also considered using a special function name (i.e. if(listener.name ===\n                    // special)) but that was more cumbersome and we were also concerned the compiled code could\n                    // strip the name, turning the condition in to (\"\" === \"\") and always returning true.\n                    if (listener.toString().indexOf('__ngUnwrap__') !== -1) {\n                        var unwrappedListener = listener('__ngUnwrap__');\n                        return invokedListeners.indexOf(unwrappedListener) === -1 &&\n                            unwrappedListener.call(node, eventObj);\n                    }\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function copyDomProperties(element, properties) {\n        if (element) {\n            // Skip own properties (as those are patched)\n            var obj = Object.getPrototypeOf(element);\n            var NodePrototype = Node.prototype;\n            while (obj !== null && obj !== NodePrototype) {\n                var descriptors = Object.getOwnPropertyDescriptors(obj);\n                for (var key in descriptors) {\n                    if (!key.startsWith('__') && !key.startsWith('on')) {\n                        // don't include properties starting with `__` and `on`.\n                        // `__` are patched values which should not be included.\n                        // `on` are listeners which also should not be included.\n                        var value = element[key];\n                        if (isPrimitiveValue(value)) {\n                            properties[key] = value;\n                        }\n                    }\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n        }\n    }\n    function isPrimitiveValue(value) {\n        return typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number' ||\n            value === null;\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode, false);\n        if (context !== null) {\n            var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n            _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n        }\n        else {\n            // If the context is null, then `parentElement` was either created with Renderer2 or native DOM\n            // APIs.\n            _queryNativeNodeDescendants(parentElement.nativeNode, predicate, matches, elementsOnly);\n        }\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = lView[DECLARATION_COMPONENT_VIEW];\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(properties, tNode, lView, tData) {\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__PRE_R3__;\n    function getDebugNodeR2__PRE_R3__(nativeNode) {\n        return getDebugNode__PRE_R3__(nativeNode);\n    }\n    function getDebugNodeR2__POST_R3__(_nativeNode) {\n        return null;\n    }\n    var getDebugNodeR2 = getDebugNodeR2__PRE_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (typeof ngI18nClosureMode !== 'undefined' && ngI18nClosureMode &&\n            typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    var ɵ0$g = USD_CURRENCY_CODE;\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n        { provide: DEFAULT_CURRENCY_CODE, useValue: ɵ0$g },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your `polyfills.ts` file.\\n' +\n                'For server-side rendering applications add the import to your `main.server.ts` file.)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_ID = APP_ID;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.ApplicationModule = ApplicationModule;\n    exports.ApplicationRef = ApplicationRef;\n    exports.Attribute = Attribute;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.Component = Component;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ComponentRef = ComponentRef;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.DEFAULT_CURRENCY_CODE = DEFAULT_CURRENCY_CODE;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.Directive = Directive;\n    exports.ElementRef = ElementRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ErrorHandler = ErrorHandler;\n    exports.EventEmitter = EventEmitter;\n    exports.Host = Host;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.INJECTOR = INJECTOR;\n    exports.Inject = Inject;\n    exports.Injectable = Injectable;\n    exports.InjectionToken = InjectionToken;\n    exports.Injector = Injector;\n    exports.Input = Input;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgProbeToken = NgProbeToken;\n    exports.NgZone = NgZone;\n    exports.Optional = Optional;\n    exports.Output = Output;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.Pipe = Pipe;\n    exports.PlatformRef = PlatformRef;\n    exports.Query = Query;\n    exports.QueryList = QueryList;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.Sanitizer = Sanitizer;\n    exports.Self = Self;\n    exports.SimpleChange = SimpleChange;\n    exports.SkipSelf = SkipSelf;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.TemplateRef = TemplateRef;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.Type = Type;\n    exports.VERSION = VERSION;\n    exports.Version = Version;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.ViewRef = ViewRef$1;\n    exports.WrappedValue = WrappedValue;\n    exports.asNativeElements = asNativeElements;\n    exports.assertPlatform = assertPlatform;\n    exports.createPlatform = createPlatform;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.defineInjectable = defineInjectable;\n    exports.destroyPlatform = destroyPlatform;\n    exports.enableProdMode = enableProdMode;\n    exports.forwardRef = forwardRef;\n    exports.getDebugNode = getDebugNode$1;\n    exports.getModuleFactory = getModuleFactory;\n    exports.getPlatform = getPlatform;\n    exports.inject = inject;\n    exports.isDevMode = isDevMode;\n    exports.platformCore = platformCore;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵConsole = Console;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵand = anchorDef;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_ba = getLView;\n    exports.ɵangular_packages_core_core_bb = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bc = getBindingRoot;\n    exports.ɵangular_packages_core_core_bd = nextContextImpl;\n    exports.ɵangular_packages_core_core_bf = pureFunction1Internal;\n    exports.ɵangular_packages_core_core_bg = pureFunction2Internal;\n    exports.ɵangular_packages_core_core_bh = pureFunction3Internal;\n    exports.ɵangular_packages_core_core_bi = pureFunction4Internal;\n    exports.ɵangular_packages_core_core_bj = pureFunctionVInternal;\n    exports.ɵangular_packages_core_core_bk = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bl = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bm = makePropDecorator;\n    exports.ɵangular_packages_core_core_bn = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_bp = noSideEffects;\n    exports.ɵangular_packages_core_core_bq = getRootContext;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_m = getDebugNodeR2__PRE_R3__;\n    exports.ɵangular_packages_core_core_n = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_o = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_p = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_r = _localeFactory;\n    exports.ɵangular_packages_core_core_s = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_t = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_u = USD_CURRENCY_CODE;\n    exports.ɵangular_packages_core_core_v = _def;\n    exports.ɵangular_packages_core_core_w = DebugContext;\n    exports.ɵangular_packages_core_core_x = SCHEDULER;\n    exports.ɵangular_packages_core_core_y = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_z = instructionState;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵgetDebugNodeR2 = getDebugNodeR2;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵgetLocaleCurrencyCode = getLocaleCurrencyCode;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵglobal = _global;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵpid = pipeDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵqud = queryDef;\n    exports.ɵregisterLocaleData = registerLocaleData;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵsetDocument = setDocument;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵstore = store;\n    exports.ɵstringify = stringify;\n    exports.ɵted = textDef;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵunregisterLocaleData = unregisterAllLocaleData;\n    exports.ɵunv = unwrapValue;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵvid = viewDef;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵCopyDefinitionFeature = ɵɵCopyDefinitionFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵinject = ɵɵinject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵinvalidFactory = ɵɵinvalidFactory;\n    exports.ɵɵinvalidFactoryDep = ɵɵinvalidFactoryDep;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleMapInterpolate1 = ɵɵstyleMapInterpolate1;\n    exports.ɵɵstyleMapInterpolate2 = ɵɵstyleMapInterpolate2;\n    exports.ɵɵstyleMapInterpolate3 = ɵɵstyleMapInterpolate3;\n    exports.ɵɵstyleMapInterpolate4 = ɵɵstyleMapInterpolate4;\n    exports.ɵɵstyleMapInterpolate5 = ɵɵstyleMapInterpolate5;\n    exports.ɵɵstyleMapInterpolate6 = ɵɵstyleMapInterpolate6;\n    exports.ɵɵstyleMapInterpolate7 = ɵɵstyleMapInterpolate7;\n    exports.ɵɵstyleMapInterpolate8 = ɵɵstyleMapInterpolate8;\n    exports.ɵɵstyleMapInterpolateV = ɵɵstyleMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}